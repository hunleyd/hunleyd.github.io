<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Osx on Doug&#39;s Dabblings | Quick thoughts on stuff I&#39;m playing with</title>
    <link>https://hunleyd.github.io/categories/osx/</link>
    <description>Recent content in Osx on Doug&#39;s Dabblings | Quick thoughts on stuff I&#39;m playing with</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Mar 2023 17:23:08 -0400</lastBuildDate>
    <atom:link href="https://hunleyd.github.io/categories/osx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Meetings, menu bars, and focus modes</title>
      <link>https://hunleyd.github.io/posts/meetings--menu-bars--and-focus-modes/</link>
      <pubDate>Sat, 25 Mar 2023 17:23:08 -0400</pubDate>
      <guid>https://hunleyd.github.io/posts/meetings--menu-bars--and-focus-modes/</guid>
      <description>&lt;p&gt;We recently moved all our issue tracking at work from &lt;a href=&#34;https://github.com&#34;&gt;GitHub Issues&lt;/a&gt; to &lt;a href=&#34;https://linear.app&#34;&gt;Linear&lt;/a&gt; for one of the products that I work on. While playing around with Linear, I stumbled upon their &lt;a href=&#34;https://reclaim.ai&#34;&gt;Reclaim.AI&lt;/a&gt; integration and immediately fell in love. I quickly set about connecting the two tools, tweaking my settings, and even opened some issues w/ the Support teams of both products. After about a week, I finally had everything up and running exactly how I wanted it. During our sprint planning meeting, I simply pulled whatever Linear issues I wanted to work on into the cycle, and then let Reclaim schedule my work based on priority and points. While I could probably write an entire blog post about these two apps, these tools are really just the &amp;lsquo;setting&amp;rsquo; for this post. You see, now that I had all my work being scheduled for me by a AI, I found that I needed to have my calendar open at all times to see what I was supposed to be working on. I &lt;em&gt;hate&lt;/em&gt; having apps open (or extra tabs in a browser) when I can have the info presented to me in some other fashion. Thankfully, I had previously discovered &lt;a href=&#34;https://github.com/leits/MeetingBar&#34;&gt;MeetingBar&lt;/a&gt; and was already a huge fan. So now I have MeetingBar running in my OSX menu bar showing me (via Reclaim) exactly what I&amp;rsquo;m supposed to be working on (or what I&amp;rsquo;m about to start working on). I was living the dream.&lt;/p&gt;</description>
    </item>
    <item>
      <title>pgBackRest 2.08 and macOS Mojave</title>
      <link>https://hunleyd.github.io/posts/pgbackrest-2.08-and-macos-mojave/</link>
      <pubDate>Fri, 04 Jan 2019 08:30:44 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/pgbackrest-2.08-and-macos-mojave/</guid>
      <description>&lt;p&gt;UPDATE: My reasoning was incorrect below. It wasn’t the moving of some of the lock code to C that caused the issue. It was moving &lt;code&gt;-D_POSIX_C_SOURCE&lt;/code&gt; up to the &lt;code&gt;Makefile&lt;/code&gt; that caused the problem. The solution below is still the same though.&lt;/p&gt;</description>
    </item>
    <item>
      <title>pgBackRest 2.07 and macOS Mojave</title>
      <link>https://hunleyd.github.io/posts/pgbackrest-2.07-and-macos-mojave/</link>
      <pubDate>Fri, 16 Nov 2018 06:12:31 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/pgbackrest-2.07-and-macos-mojave/</guid>
      <description>&lt;p&gt;pgBackRest 2.07 was &lt;a href=&#34;https://twitter.com/pgBackRest/status/1063458495700320258&#34;&gt;announced&lt;/a&gt; today. As usual, I immediately downloaded it and tried to get it up and running on my MacBook (currently running Mojave). It wasn’t as straightforward as one might hope, and the online instructions assume a &lt;em&gt;Linux&lt;/em&gt; system, so I figured I’d write this up for anyone else attempting the same.&lt;/p&gt;</description>
    </item>
    <item>
      <title>updated PostgreSQL homebrew script</title>
      <link>https://hunleyd.github.io/posts/updated-postgresql-homebrew-script/</link>
      <pubDate>Mon, 16 Oct 2017 13:09:23 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/updated-postgresql-homebrew-script/</guid>
      <description>&lt;p&gt;With the release of PostgreSQL 10, I&amp;rsquo;ve updated my &lt;code&gt;pg&lt;/code&gt; script. You might recall from previous posts that this script is for Homebrew users that have tapped Peter&amp;rsquo;s brew recipes. It allows for installing and switching between multiple version of PostgreSQL seemlessly. While I was in there adding v10 support, I tweaked and tuned the code a bit and tidyied up the output significantly. I&amp;rsquo;m pretty pleased with the new version actually.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing pgBackRest on OSX</title>
      <link>https://hunleyd.github.io/posts/installing-pgbackrest-on-osx/</link>
      <pubDate>Wed, 14 Jun 2017 12:40:30 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/installing-pgbackrest-on-osx/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;ve followed my previous posts (&lt;a href=&#34;https://hunleyd.github.io/posts/PostgreSQL-Homebrew-and-You/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://hunleyd.github.io/posts/Getting-fancy-with-PostgreSQL-and-Homebrew/&#34;&gt;here&lt;/a&gt;), then you already have one or more versions of PostgreSQL installed on your Mac. Maybe these are solely for test or dev purposes and you don&amp;rsquo;t really care about any of the data therein, but if you do, let me guide you to &lt;a href=&#34;http://www.pgbackrest.org/&#34;&gt;pgBackRest&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Managing multiple PostgreSQL installs via Homebrew</title>
      <link>https://hunleyd.github.io/posts/managing-multiple-postgresql-installs-via-homebrew/</link>
      <pubDate>Wed, 16 Nov 2016 13:45:27 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/managing-multiple-postgresql-installs-via-homebrew/</guid>
      <description>&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/34/Homebrew_logo.png&#34; class=&#34;rleader&#34; /&gt;&#xA;&lt;p&gt;Following on from &lt;a href=&#34;https://hunleyd.github.io/Getting-fancy-with-PostgreSQL-and-Homebrew/&#34;&gt;this&lt;/a&gt; post, you probably have multiple versions of PostgreSQL installed on your Mac. In that post, I added an example function to help you manage all these concurrent installs. Today, I&amp;rsquo;m back with a full-fledged shell script to help manage all this. Without further ado, the script:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Routing email through GMail on OSX</title>
      <link>https://hunleyd.github.io/posts/routing-email-through-gmail-on-osx/</link>
      <pubDate>Tue, 15 Nov 2016 10:51:00 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/routing-email-through-gmail-on-osx/</guid>
      <description>&lt;img src=&#34;http://www.postfix.org/mysza.gif&#34; class=&#34;lleader&#34; /&gt;&#xA;&lt;p&gt;Like most geeks, I have scripts that I&amp;rsquo;ve written that I like to have run from cron on a regular basis. And since the running of these scripts might be in the middle of the night, I like for them to email their output to me so I know if they succeeded or failed. As such, I need an MTA on my computer that can actually deliver these emails to GMail. For me, this is trivial using Sendmail or SSMTP on a Linux box, but I can never remember how to do this using Postfix on OSX. So after having to Google everything to get this running once more, I&amp;rsquo;m going to commit the steps here for my future self to reference :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting fancy with PostgreSQL and Homebrew</title>
      <link>https://hunleyd.github.io/posts/getting-fancy-with-postgresql-and-homebrew/</link>
      <pubDate>Thu, 10 Nov 2016 14:58:15 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/getting-fancy-with-postgresql-and-homebrew/</guid>
      <description>&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/34/Homebrew_logo.png&#34; class=&#34;rleader&#34; /&gt;&#xA;&lt;p&gt;In our &lt;a href=&#34;https://hunleyd.github.io/PostgreSQL-Homebrew-and-You/&#34;&gt;previous&lt;/a&gt; post, we installed PostgreSQL via Homebrew and got our own little cluster up and running under our userid. That is probably good enough for 90% of the users out there who just want to play with or devel on PostgreSQL, but for those of us who need a little more flexibility in our installs, we&amp;rsquo;re going to take the next step.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PostgreSQL, Homebrew, and You</title>
      <link>https://hunleyd.github.io/posts/postgresql-homebrew-and-you/</link>
      <pubDate>Fri, 04 Nov 2016 13:30:09 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/postgresql-homebrew-and-you/</guid>
      <description>&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/34/Homebrew_logo.png&#34; class=&#34;lleader&#34; /&gt;&#xA;&lt;p&gt;If you need to install &lt;a href=&#34;http://www.posatgresql.org&#34;&gt;PostgreSQL&lt;/a&gt; onto your Macbook, you have several options available to you nowadays. You could use the &lt;a href=&#34;https://bigsql.com/postgresql/installers.jsp&#34;&gt;BigSQL&lt;/a&gt; package, or you could use &lt;a href=&#34;http://postgresapp.com&#34;&gt;Postgres.app&lt;/a&gt;, or several others. However, if you&amp;rsquo;re a geek running OSX, you&amp;rsquo;ve probably already installed &lt;a href=&#34;http://brew.sh&#34;&gt;Homebrew&lt;/a&gt; and it has a wonderful PostgreSQL package. So let&amp;rsquo;s use it, shall we?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Glutton for Punishment</title>
      <link>https://hunleyd.github.io/posts/glutton-for-punishment/</link>
      <pubDate>Mon, 29 Feb 2016 10:14:50 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/glutton-for-punishment/</guid>
      <description>&lt;img src=&#34;http://www.theshell.guru/wp-content/uploads/2015/12/osx-logo3.png&#34; class=&#34;rleader&#34; /&gt;&#xA;&lt;p&gt;I recently got a new Macbook Pro from work as my old one was having keyboard issues and since it was 3+ yrs old they deemed it not worth fixing. As you probably know, I spent a lot of time and effort on the previous mbp to get &lt;a href=&#34;http://www.gentoo.org&#34;&gt;Gentoo&lt;/a&gt; up and running on it. I chose &lt;em&gt;not&lt;/em&gt; to do so with this one.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

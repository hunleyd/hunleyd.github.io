<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Howto on Doug&#39;s Dabblings | Quick thoughts on stuff I&#39;m playing with</title>
    <link>https://hunleyd.github.io/categories/howto/</link>
    <description>Recent content in Howto on Doug&#39;s Dabblings | Quick thoughts on stuff I&#39;m playing with</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 25 Aug 2021 15:33:18 +0000</lastBuildDate>
    <atom:link href="https://hunleyd.github.io/categories/howto/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>I said brr it&#39;s cold in here</title>
      <link>https://hunleyd.github.io/posts/i-said-brr-it-s-cold-in-here/</link>
      <pubDate>Wed, 25 Aug 2021 15:33:18 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/i-said-brr-it-s-cold-in-here/</guid>
      <description>&lt;p&gt;I don&amp;rsquo;t like the heat. I hate being hot. Always have. I&amp;rsquo;m the guy who will&#xA;leave the windows open when others have already turned on the furnace. And&#xA;I used to be guy who ran the AC all the time and ran it at a very low temp.&#xA;Recently though, I&amp;rsquo;ve come to realize that as long as it&amp;rsquo;s colder in here than&#xA;it is out there, it&amp;rsquo;s all good. However, the delta has be more than just a few&#xA;degrees. And I need the fan on.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automations, timers, and you</title>
      <link>https://hunleyd.github.io/posts/automations--timers--and-you/</link>
      <pubDate>Mon, 16 Aug 2021 13:48:35 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/automations--timers--and-you/</guid>
      <description>&lt;p&gt;For a while now, I&amp;rsquo;ve been automating my apartment using the&#xA;&lt;a href=&#34;https://www.home-assistant.io/docs/automation/basics/&#34;&gt;automations&lt;/a&gt; component&#xA;of &lt;a href=&#34;https://www.home-assistant.io&#34;&gt;Home Assistant&lt;/a&gt;. In fact, I had amassed&#xA;quite the collection of automations and was starting to have a problem keeping&#xA;track of them all and their various interactions (intentional or otherwise).&#xA;So earlier this year when Home Assistant introduced &lt;a href=&#34;https://www.home-assistant.io/blog/2021/04/07/release-20214/#automation-debugging&#34;&gt;automation&#xA;debugging&lt;/a&gt;&#xA;I decided to sit down and refactor the whole thing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Generating DNS noise</title>
      <link>https://hunleyd.github.io/posts/generating-dns-noise/</link>
      <pubDate>Sat, 14 Aug 2021 16:27:09 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/generating-dns-noise/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Domain_Name_System&#34;&gt;DNS&lt;/a&gt; is one of those thing&#xA;most people never think about. It&amp;rsquo;s one of those things in the background that&#xA;quietly does its job and no one pays it no mind. Which is why it&amp;rsquo;s surprising&#xA;to people when they discover that if their DNS traffic can be logged, a very&#xA;informative picture of them can be created.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ricing it up</title>
      <link>https://hunleyd.github.io/posts/ricing-it-up/</link>
      <pubDate>Sat, 31 Jul 2021 09:12:54 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/ricing-it-up/</guid>
      <description>&lt;p&gt;One of the reasons that I find myself going back to Gentoo is that you compile the entire system &lt;em&gt;for your hardware&lt;/em&gt; which, in theory, leads to the best performance possible. So the first task that I undertook when switching the NUC over to it was to figure out what compile options ClearLinux uses. Once I had figured those settings out, I then decided to use LTO optimization for all packages that support it. However, I didn&amp;rsquo;t want to use the &lt;a href=&#34;https://github.com/gentoo-mirror/lto-overlay&#34;&gt;LTO overlay&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>tuned, PG, and you</title>
      <link>https://hunleyd.github.io/posts/tuned-pg-and-you/</link>
      <pubDate>Tue, 23 Jun 2020 18:22:44 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/tuned-pg-and-you/</guid>
      <description>&lt;p&gt;We&amp;rsquo;ve had a small flurry of customers asking about tuning their OS for the best PostgreSQL performance. While the answer to this question is always &amp;rsquo;that depends on your hardware and workload&amp;rsquo; and involves a lot of iteration between changing a setting and benchmarking, I thought I&amp;rsquo;d take a moment to point out that once you do manage to dial-in the settings, you should be writing a profile and deploying to your systems for &lt;code&gt;tuned&lt;/code&gt; to make use of. Please, for the love of $diety, stop editing &lt;code&gt;sysctl.conf&lt;/code&gt; and friends!&lt;/p&gt;</description>
    </item>
    <item>
      <title>pgBackRest 2.08 and macOS Mojave</title>
      <link>https://hunleyd.github.io/posts/pgbackrest-2.08-and-macos-mojave/</link>
      <pubDate>Fri, 04 Jan 2019 08:30:44 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/pgbackrest-2.08-and-macos-mojave/</guid>
      <description>&lt;p&gt;UPDATE: My reasoning was incorrect below. It wasn’t the moving of some of the lock code to C that caused the issue. It was moving &lt;code&gt;-D_POSIX_C_SOURCE&lt;/code&gt; up to the &lt;code&gt;Makefile&lt;/code&gt; that caused the problem. The solution below is still the same though.&lt;/p&gt;</description>
    </item>
    <item>
      <title>pgBackRest 2.07 and macOS Mojave</title>
      <link>https://hunleyd.github.io/posts/pgbackrest-2.07-and-macos-mojave/</link>
      <pubDate>Fri, 16 Nov 2018 06:12:31 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/pgbackrest-2.07-and-macos-mojave/</guid>
      <description>&lt;p&gt;pgBackRest 2.07 was &lt;a href=&#34;https://twitter.com/pgBackRest/status/1063458495700320258&#34;&gt;announced&lt;/a&gt; today. As usual, I immediately downloaded it and tried to get it up and running on my MacBook (currently running Mojave). It wasn’t as straightforward as one might hope, and the online instructions assume a &lt;em&gt;Linux&lt;/em&gt; system, so I figured I’d write this up for anyone else attempting the same.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Monitoring pgBackRest with tail_n_mail</title>
      <link>https://hunleyd.github.io/posts/monitoring-pgbackrest-with-tail_n_mail/</link>
      <pubDate>Mon, 24 Sep 2018 10:58:22 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/monitoring-pgbackrest-with-tail_n_mail/</guid>
      <description>&lt;p&gt;After a lively discussion at work today about monitoring tools and use cases, I decided to see if I could use &lt;a href=&#34;https://bucardo.org/tail_n_mail/&#34;&gt;tail_n_mail&lt;/a&gt;, which I already use to monitor my PostgreSQL logs, to monitor my pgBackRest logs. It turns out that it can, and can do so fairly trivially.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upgrading PostgreSQL from 9.4 to 10.3 with pglogical</title>
      <link>https://hunleyd.github.io/posts/upgrading-postgresql-from-9.4-to-10.3-with-pglogical/</link>
      <pubDate>Thu, 05 Apr 2018 13:15:46 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/upgrading-postgresql-from-9.4-to-10.3-with-pglogical/</guid>
      <description>&lt;p&gt;I recently helped a customer upgrade their PostgreSQL instance from 9.4.x on RHEL to 10.x on Ubuntu. While it initially sounded daunting, the use of &lt;code&gt;pglogical&lt;/code&gt; and some planning actually made it rather straightforward. While there&amp;rsquo;s nothing new or original in this post, I still felt compelled to write it up both for posterity&amp;rsquo;s sake and for anyone else that might find the info useful as an example in their own endeavors.&lt;/p&gt;</description>
    </item>
    <item>
      <title>updated PostgreSQL homebrew script</title>
      <link>https://hunleyd.github.io/posts/updated-postgresql-homebrew-script/</link>
      <pubDate>Mon, 16 Oct 2017 13:09:23 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/updated-postgresql-homebrew-script/</guid>
      <description>&lt;p&gt;With the release of PostgreSQL 10, I&amp;rsquo;ve updated my &lt;code&gt;pg&lt;/code&gt; script. You might recall from previous posts that this script is for Homebrew users that have tapped Peter&amp;rsquo;s brew recipes. It allows for installing and switching between multiple version of PostgreSQL seemlessly. While I was in there adding v10 support, I tweaked and tuned the code a bit and tidyied up the output significantly. I&amp;rsquo;m pretty pleased with the new version actually.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Installing pgBackRest on OSX</title>
      <link>https://hunleyd.github.io/posts/installing-pgbackrest-on-osx/</link>
      <pubDate>Wed, 14 Jun 2017 12:40:30 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/installing-pgbackrest-on-osx/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;ve followed my previous posts (&lt;a href=&#34;https://hunleyd.github.io/posts/PostgreSQL-Homebrew-and-You/&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://hunleyd.github.io/posts/Getting-fancy-with-PostgreSQL-and-Homebrew/&#34;&gt;here&lt;/a&gt;), then you already have one or more versions of PostgreSQL installed on your Mac. Maybe these are solely for test or dev purposes and you don&amp;rsquo;t really care about any of the data therein, but if you do, let me guide you to &lt;a href=&#34;http://www.pgbackrest.org/&#34;&gt;pgBackRest&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Managing multiple PostgreSQL installs via Homebrew</title>
      <link>https://hunleyd.github.io/posts/managing-multiple-postgresql-installs-via-homebrew/</link>
      <pubDate>Wed, 16 Nov 2016 13:45:27 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/managing-multiple-postgresql-installs-via-homebrew/</guid>
      <description>&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/34/Homebrew_logo.png&#34; class=&#34;rleader&#34; /&gt;&#xA;&lt;p&gt;Following on from &lt;a href=&#34;https://hunleyd.github.io/Getting-fancy-with-PostgreSQL-and-Homebrew/&#34;&gt;this&lt;/a&gt; post, you probably have multiple versions of PostgreSQL installed on your Mac. In that post, I added an example function to help you manage all these concurrent installs. Today, I&amp;rsquo;m back with a full-fledged shell script to help manage all this. Without further ado, the script:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Routing email through GMail on OSX</title>
      <link>https://hunleyd.github.io/posts/routing-email-through-gmail-on-osx/</link>
      <pubDate>Tue, 15 Nov 2016 10:51:00 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/routing-email-through-gmail-on-osx/</guid>
      <description>&lt;img src=&#34;http://www.postfix.org/mysza.gif&#34; class=&#34;lleader&#34; /&gt;&#xA;&lt;p&gt;Like most geeks, I have scripts that I&amp;rsquo;ve written that I like to have run from cron on a regular basis. And since the running of these scripts might be in the middle of the night, I like for them to email their output to me so I know if they succeeded or failed. As such, I need an MTA on my computer that can actually deliver these emails to GMail. For me, this is trivial using Sendmail or SSMTP on a Linux box, but I can never remember how to do this using Postfix on OSX. So after having to Google everything to get this running once more, I&amp;rsquo;m going to commit the steps here for my future self to reference :)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting fancy with PostgreSQL and Homebrew</title>
      <link>https://hunleyd.github.io/posts/getting-fancy-with-postgresql-and-homebrew/</link>
      <pubDate>Thu, 10 Nov 2016 14:58:15 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/getting-fancy-with-postgresql-and-homebrew/</guid>
      <description>&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/34/Homebrew_logo.png&#34; class=&#34;rleader&#34; /&gt;&#xA;&lt;p&gt;In our &lt;a href=&#34;https://hunleyd.github.io/PostgreSQL-Homebrew-and-You/&#34;&gt;previous&lt;/a&gt; post, we installed PostgreSQL via Homebrew and got our own little cluster up and running under our userid. That is probably good enough for 90% of the users out there who just want to play with or devel on PostgreSQL, but for those of us who need a little more flexibility in our installs, we&amp;rsquo;re going to take the next step.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PostgreSQL, Homebrew, and You</title>
      <link>https://hunleyd.github.io/posts/postgresql-homebrew-and-you/</link>
      <pubDate>Fri, 04 Nov 2016 13:30:09 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/postgresql-homebrew-and-you/</guid>
      <description>&lt;img src=&#34;https://upload.wikimedia.org/wikipedia/commons/3/34/Homebrew_logo.png&#34; class=&#34;lleader&#34; /&gt;&#xA;&lt;p&gt;If you need to install &lt;a href=&#34;http://www.posatgresql.org&#34;&gt;PostgreSQL&lt;/a&gt; onto your Macbook, you have several options available to you nowadays. You could use the &lt;a href=&#34;https://bigsql.com/postgresql/installers.jsp&#34;&gt;BigSQL&lt;/a&gt; package, or you could use &lt;a href=&#34;http://postgresapp.com&#34;&gt;Postgres.app&lt;/a&gt;, or several others. However, if you&amp;rsquo;re a geek running OSX, you&amp;rsquo;ve probably already installed &lt;a href=&#34;http://brew.sh&#34;&gt;Homebrew&lt;/a&gt; and it has a wonderful PostgreSQL package. So let&amp;rsquo;s use it, shall we?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Incremental pgBadger</title>
      <link>https://hunleyd.github.io/posts/incremental-pgbadger/</link>
      <pubDate>Wed, 26 Oct 2016 14:46:09 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/incremental-pgbadger/</guid>
      <description>&lt;img src=&#34;http://www.darold.net/img/pgbadger_logo.png&#34; class=&#34;lleader&#34; /&gt;&#xA;&lt;p&gt;You&amp;rsquo;re probably already running &lt;a href=&#34;https://dalibo.github.io/pgbadger/index.html&#34;&gt;pgBadger&lt;/a&gt; to monitor your PostgreSQL logs. However, you&amp;rsquo;re probably &lt;em&gt;not&lt;/em&gt; running it incrementally throughout the day. Most likely, you&amp;rsquo;ve setup a &lt;code&gt;cron.daily&lt;/code&gt; job that runs pgBadger against yesterday&amp;rsquo;s log(s). And that&amp;rsquo;s great. Except when you get the dreaded &amp;ldquo;what just happened on the db?&amp;rdquo; email. Are you going to wait until tonight&amp;rsquo;s normal run of pgBadger to see what happened? Are you going to run a &amp;lsquo;one off&amp;rsquo; pgBadger against today&amp;rsquo;s logfile and wait for it to process the &lt;em&gt;entire&lt;/em&gt; log? Or are you going to copy the log off somewhere, edit it to cut it down, and &lt;em&gt;then&lt;/em&gt; run pgBadger against this cut-down version (hoping you left enough in the log to see proper trending)?&lt;/p&gt;</description>
    </item>
    <item>
      <title>PostgreSQL Partitioning Quick Tip</title>
      <link>https://hunleyd.github.io/posts/postgresql-partitioning-quick-tip/</link>
      <pubDate>Thu, 21 Apr 2016 09:25:32 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/postgresql-partitioning-quick-tip/</guid>
      <description>&lt;img src=&#34;http://www.habitsofmind.org/sites/default/files/helpful-tips-image-web-design-sydney.jpg&#34; class=&#34;rleader&#34; /&gt;&#xA;&lt;p&gt;Partitioning in PostgreSQL can be a little daunting at times. In fact, you should probably just use &lt;a href=&#34;https://github.com/keithf4/pg_partman&#34;&gt;pg_partman&lt;/a&gt; and be done with it. However, if you&amp;rsquo;re trying to learn, can&amp;rsquo;t use &lt;code&gt;pg_partman&lt;/code&gt;, or are a masochist you&amp;rsquo;ll probably be following the &lt;a href=&#34;http://www.postgresql.org/docs/current/static/ddl-partitioning.html&#34;&gt;docs&lt;/a&gt; and thinking &amp;lsquo;seriously? i have to create indexes on each child? why don&amp;rsquo;t they copy the indexes of the parent? why isn&amp;rsquo;t this easier?&amp;rsquo;. Here&amp;rsquo;s a little tip to make things slightly easier:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Logical Replication with Skytools3</title>
      <link>https://hunleyd.github.io/posts/logical-replication-with-skytool3/</link>
      <pubDate>Tue, 19 Apr 2016 13:55:11 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/logical-replication-with-skytool3/</guid>
      <description>&lt;img src=&#34;https://cdn2.iconfinder.com/data/icons/color-svg-cloud-icons/512/cloud_refresh-512.png&#34; class=&#34;lleader&#34; /&gt;&#xA;&lt;p&gt;UPDATE: My coworker Richard liked this write up, and Skytools, so much he threw together a demo script. You can get it &lt;a href=&#34;https://github.com/richyen/toolbox/blob/master/pg/londiste/londiste_demo.sh&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>PostgreSQL Streaming Replication in 10 Minutes</title>
      <link>https://hunleyd.github.io/posts/postgresql-streaming-replication-in-10-minutes/</link>
      <pubDate>Mon, 18 Apr 2016 14:47:10 +0000</pubDate>
      <guid>https://hunleyd.github.io/posts/postgresql-streaming-replication-in-10-minutes/</guid>
      <description>&lt;img src=&#34;https://hunleyd.github.io/images/posts/database-replication.png&#34; class=&#34;rleader&#34; /&gt;&#xA;&lt;p&gt;While there&amp;rsquo;s absolutely nothing new in this blog&amp;quot;post&amp;quot;that isn&amp;rsquo;t covered by the wonderful &lt;a href=&#34;http://www.postgresql.org/docs/current/static/index.html&#34;&gt;docs&lt;/a&gt; I&amp;rsquo;ve been asked multiple times now by customers if we had some kind of &amp;lsquo;crib notes&amp;rsquo; format for how to get replication up and running. And since I just had to set this up and document it for a customer, I figured I might as well&amp;quot;post&amp;quot;it so that I can simply point people to it in the future. So here we are.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

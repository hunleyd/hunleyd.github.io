<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title></title>
 <link href="http://hunleyd.github.io/feed.xml" rel="self"/>
 <link href="http://hunleyd.github.io/"/>
 <updated>2016-09-30T10:48:22-04:00</updated>
 <id>http://hunleyd.github.io</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Where Not To Put Your Tablespaces</title>
   <link href="http://hunleyd.github.io/Where-Not-To-Put-Your-Tablespaces/"/>
   <updated>2016-08-24T07:55:12-04:00</updated>
   <id>http://hunleyd.github.io/Where-Not-To-Put-Your-Tablespaces</id>
   <content type="html">&lt;p&gt;From the PostgreSQL &lt;a href=&quot;https://www.postgresql.org/docs/current/static/manage-ag-tablespaces.html&quot;&gt;docs&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Tablespaces in PostgreSQL allow database administrators to define locations in the file system where the files representing database objects can be stored. Once created, a tablespace can be referred to by name when creating database objects.&lt;/p&gt;

&lt;p&gt;By using tablespaces, an administrator can control the disk layout of a PostgreSQL installation. This is useful in at least two ways. First, if the partition or volume on which the cluster was initialized runs out of space and cannot be extended, a tablespace can be created on a different partition and used until the system can be reconfigured.&lt;/p&gt;

&lt;p&gt;Second, tablespaces allow an administrator to use knowledge of the usage pattern of database objects to optimize performance. For example, an index which is very heavily used can be placed on a very fast, highly available disk, such as an expensive solid state device. At the same time a table storing archived data which is rarely used or not performance critical could be stored on a less expensive, slower disk system.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;As you can see, while not as powerful as tablespaces in, say, Oracle, they do still have their uses in PostgreSQL. You can use them to make use of different filesystems, or different mount options, or different disk types and, in doing so, intelligently apply performance characteristics to subsets of your data. For example, you could put your highest volume tables in a tablespace that is mounted from SSDs while the rest of your db is mounted from spinning rust.&lt;/p&gt;

&lt;p&gt;Sounds decent, right? Now you before you go off and be &amp;quot;clever&amp;quot; and create an SSD-backed mountpoint for your new tablespace, understand that there are places you &lt;em&gt;should not&lt;/em&gt; create the tablespace. You shouldn&amp;#39;t create tablespaces on any kind of ephemeral storage, for example on a &lt;code&gt;tmpfs&lt;/code&gt; or a &lt;code&gt;ramfs&lt;/code&gt; or similar. &lt;em&gt;You also should not create your new tablespaces under $PGDATA&lt;/em&gt;. Yes, I&amp;#39;m aware there is &lt;code&gt;$PGDATA/pg_tblspc&lt;/code&gt; but that directory is &lt;em&gt;not for you&lt;/em&gt;. The system will auto-populate that directory with pointers to the real location of your tablespaces!&lt;/p&gt;

&lt;p&gt;So what happens when you create a tablespace inside $PGDATA? Let&amp;#39;s find out. First, we&amp;#39;ll create the directory for the tablespace:&lt;/p&gt;

&lt;p&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
doug.hunley ~ $ mkdir $PGDATA/tablespaces
doug.hunley ~ $ cd $PGDATA/tablespaces
doug.hunley ~/pgdata/tablespaces $ pwd
/Users/doug.hunley/pgdata/tablespaces
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/abe0d33a02ae2d5ee515f7f0261d000c.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;And we see that nothing bad has happened yet. So, let&amp;#39;s pop over into &lt;code&gt;psql&lt;/code&gt; and actually create the tablespace:&lt;/p&gt;

&lt;p&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;sql
(doug.hunley@[local]:5432/doug.hunley) # CREATE TABLESPACE ts1 LOCATION &amp;amp;#39;/Users/doug.hunley/pgdata/tablespaces&amp;amp;#39;;
WARNING:  42P17: tablespace location should not be inside the data directory
LOCATION:  CreateTableSpace, tablespace.c:295
CREATE TABLESPACE
Time: 7.797 ms
(doug.hunley@[local]:5432/doug.hunley) #
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/dba03610d0181abe363378ccaedafb98.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;We get a warning (not an error, for some reason) but it works and all appears fine. Now you can spend minutes/days/months/years using your new tablespace and never notice that you&amp;#39;ve got a problem. So where does the problem come in? &lt;/p&gt;

&lt;p&gt;Let&amp;#39;s try to make a backup of our cluster:&lt;/p&gt;

&lt;p&gt;&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
doug.hunley ~ $ pg_basebackup -D pgdata2 -Fp -R -Xs -c fast -l &amp;amp;#39;clone for slave&amp;amp;#39; -P -v
transaction log start point: 2/17000028 on timeline 1
pg_basebackup: directory &amp;amp;quot;/Users/doug.hunley/pgdata/tablespaces&amp;amp;quot; exists but is not empty
doug.hunley ~ $
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/d55de865904c475ce0099eb03732251b.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;There it is.&lt;/p&gt;

&lt;p&gt;When creating the backup, it tries to ensure the tablespace location is the same, but then it won&amp;#39;t write to a non-empty directory. My example is two different $PGDATA locations on the same box, but the issue is the same when using different machines because &lt;code&gt;pg_basebackup&lt;/code&gt; backs up &lt;em&gt;everything&lt;/em&gt; in $PGDATA which means your tablespace directory gets cloned before it gets to the actual cloning of the data in the tablespace so you end up with &amp;quot;stuff&amp;quot; in the dir, making it non-empty. Which gives you the same error and output.&lt;/p&gt;

&lt;p&gt;OK, so it breaks backups. I can work around that by using another backup method. What else?&lt;/p&gt;

&lt;p&gt;How about using &lt;code&gt;pg_upgrade&lt;/code&gt; to do an upgrade? No matter if you run in &lt;code&gt;link&lt;/code&gt; mode or not, &lt;code&gt;pg_upgrade&lt;/code&gt; &lt;em&gt;will not move&lt;/em&gt; your tablespace location. So you may have &lt;code&gt;~/pgdata95&lt;/code&gt; and &lt;code&gt;~/pgdata96&lt;/code&gt; after the upgrade, but your tablespaces &lt;em&gt;are still in&lt;/em&gt; &lt;code&gt;~/pgdata95/tablespaces&lt;/code&gt;. So, as per the &lt;a href=&quot;https://www.postgresql.org/docs/current/static/pgupgrade.html&quot;&gt;docs&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Once you are satisfied with the upgrade, you can delete the old cluster&amp;#39;s data directories by running the script mentioned when pg_upgrade completes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And &lt;em&gt;boom&lt;/em&gt; you&amp;#39;ve just deleted your tablespaces off disk. Congratulations!&lt;/p&gt;

&lt;p&gt;So there you have it. Two very good reasons to not create tablespaces inside $PGDATA. Please, don&amp;#39;t do this. Everyone who admins that cluster going forward will thank you.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Making use of gists</title>
   <link href="http://hunleyd.github.io/Making-use-of-gists/"/>
   <updated>2016-06-19T11:42:19-04:00</updated>
   <id>http://hunleyd.github.io/Making-use-of-gists</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://2.bp.blogspot.com/-5yjV3rrAvHk/U6Gm4-prTPI/AAAAAAAAJf4/7HXcjGxXGxI/s1600/logo_github_gist.png&quot; align=right border=0 width=218 height=59&gt; After stumbling upon an example of how to do so, I&amp;#39;ve converted all my existing blog posts to use GitHub Gists instead of inline code blocks. It gives me added functionality, and reduces the size of the blog pages as well. Might as well use every GitHub feature I can since I&amp;#39;ve chosen that platform for hosting my blog, right? :)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Happy 20th Birthday, PostgreSQL</title>
   <link href="http://hunleyd.github.io/Happy-20th-PostgreSQL/"/>
   <updated>2016-05-12T06:11:31-04:00</updated>
   <id>http://hunleyd.github.io/Happy-20th-PostgreSQL</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;/images/pgsql_20th.png&quot; width=200 height=200 border=0 align=left style=&quot;PADDING-RIGHT: 5px&quot;&gt;Just a quick shout out to PostgreSQL, the world&amp;#39;s most advanced open source database, as it celebrates it&amp;#39;s 20&lt;sup&gt;th&lt;/sup&gt; year in existence. Happy birthday, y&amp;#39;all!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Smart Lock on Android N DP2</title>
   <link href="http://hunleyd.github.io/Smart-Lock-on-Android-N-DP2/"/>
   <updated>2016-04-24T18:18:56-04:00</updated>
   <id>http://hunleyd.github.io/Smart-Lock-on-Android-N-DP2</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;http://pre13.deviantart.net/ba29/th/pre/i/2016/070/a/f/android_n_logo_by_stayka007-d9untw2.png&quot; border=0 width=240 height=240 align=right style=&quot;PADDING-LEFT: 5px&quot;&gt;As mentioned in my previous &lt;a href=&quot;/Now-on-Tap-Android-N-DP2/&quot;&gt;post&lt;/a&gt; I&amp;#39;ve stumbled across two issues with the 2&lt;sup&gt;nd&lt;/sup&gt; Developer Preview of Android N. The latter of these issues is discussed here. For reasons I won&amp;#39;t get into, I had need to wipe and reset my Huawei Watch, and after doing so I attempted to setup Smart Lock such that when the watch was connected, the phone would stay unlocked.&lt;/p&gt;

&lt;p&gt;I was immediately aware of &lt;em&gt;some&lt;/em&gt; kind of issue since the phone didn&amp;#39;t prompt me to setup Smaet Lock after pairing the watch. So I went into the Android Settings app, then Security, and went to tap on Smart Lock only to find it &lt;em&gt;gone&lt;/em&gt;. Thinking maybe Google had moved it somewherre else, I used the new &amp;#39;search Settings&amp;#39; feature and searched for Smart Lock, Lock, and Smart. None of them tuened up what I was looking for! After some Googling, I had enough clues to figure out what had happened to the option and how to restore it. &lt;/p&gt;

&lt;p&gt;To restore Smart Lock to the Security tab of the Settings app, do this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;open the Android Settings app&lt;/li&gt;
&lt;li&gt;tap Security&lt;/li&gt;
&lt;li&gt;scroll down to the Advanced section&lt;/li&gt;
&lt;li&gt;tap Trust Agents&lt;/li&gt;
&lt;li&gt;toggle Smart Lock (Google)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, when ypou back button to the Security settings, the Smart Lock option will be restored and function like before. I dont know wtf &amp;#39;unset&amp;#39; it as a Trust Agent provider in DP2 or why, but there you go.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Now on Tap on Android N DP2</title>
   <link href="http://hunleyd.github.io/Now-on-Tap-Android-N-DP2/"/>
   <updated>2016-04-24T17:53:06-04:00</updated>
   <id>http://hunleyd.github.io/Now-on-Tap-Android-N-DP2</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;http://pre13.deviantart.net/ba29/th/pre/i/2016/070/a/f/android_n_logo_by_stayka007-d9untw2.png&quot; border=0 width=240 height=240 align=left style=&quot;PADDING-RIGHT: 5px&quot;&gt;Like any good geek, I jumped at the opportunity to enroll my Nexus 5x into the Android N Beta Program. And for the most part, it&amp;#39;s worked really well for me. I &lt;em&gt;really&lt;/em&gt; like Android N so far and can&amp;#39;t wait for the final release. However, after updating from Developer Preview 1 (DP1) to Developer Preview 2 (DP2) via OTA, I noticed two small issues. The first issue is that I could not, for the life of me, get Now On Tap to enable even though it was previously enabled on DP1.&lt;/p&gt;

&lt;p&gt;I&amp;#39;m happy to report that I figured out, and I thought I&amp;#39;d share it in case anyone else has run this issue and was stumped. Just to be clear, if you open the Google app, then go into Settings, and then into Now on Tap, there&amp;#39;s a toggle. Simply flipping it is &lt;em&gt;supposed&lt;/em&gt; to be enough to turn it on. But in my case, the toggle would &lt;em&gt;not&lt;/em&gt; flip on. It was permanently flipped to off.&lt;/p&gt;

&lt;p&gt;To fix this:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;head into the Android Settings app&lt;/li&gt;
&lt;li&gt;touch Apps&lt;/li&gt;
&lt;li&gt;touch the gear icon on the top right corner&lt;/li&gt;
&lt;li&gt;touch Assist &amp;amp; voice input&lt;/li&gt;
&lt;li&gt;touch Assist App&lt;/li&gt;
&lt;li&gt;chose Google&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Once you&amp;#39;ve done this, you&amp;#39;ll find that you can enable Now on Tap through the normal toggle.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>PostgreSQL Partitioning Quick Tip</title>
   <link href="http://hunleyd.github.io/PostgresQL-Partitioning-Quick-Tip/"/>
   <updated>2016-04-21T05:25:32-04:00</updated>
   <id>http://hunleyd.github.io/PostgresQL-Partitioning-Quick-Tip</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;http://www.habitsofmind.org/sites/default/files/helpful-tips-image-web-design-sydney.jpg&quot; align=right border=0&gt;Partitioning in PostgreSQL can be a little daunting at times. In fact, you should probably just use &lt;a href=&quot;https://github.com/keithf4/pg_partman&quot;&gt;pg_partman&lt;/a&gt; and be done with it. However, if you&amp;#39;re trying to learn, can&amp;#39;t use &lt;code&gt;pg_partman&lt;/code&gt;, or are a masochist you&amp;#39;ll probably be following the &lt;a href=&quot;http://www.postgresql.org/docs/current/static/ddl-partitioning.html&quot;&gt;docs&lt;/a&gt; and thinking &amp;#39;seriously? i have to create indexes on each child? why don&amp;#39;t they copy the indexes of the parent? why isn&amp;#39;t this easier?&amp;#39;. Here&amp;#39;s a little tip to make things slightly easier:&lt;/p&gt;

&lt;p&gt;Instead of creating your child tables like the doc says:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;sql
CREATE TABLE child1 (
  CHECK (blah blah)
) INHERITS (parent);
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/0b1f8fa43534f53046eed4e63dc54e14.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Create your child tables thusly:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;sql
CREATE TABLE child1 (
  LIKE parent INCLUDING ALL,
  CHECK (blah blah)
) INHERITS (parent);
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/603c5f6961134422651e2e13b1c6398e.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;and PostgeSQL &lt;em&gt;will&lt;/em&gt; copy all your indexes, primary keys, etc from the parent to the child. Which is what you wanted, right?&lt;/p&gt;

&lt;p&gt;Enjoy.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Logical Replication with Skytools3</title>
   <link href="http://hunleyd.github.io/Logical-Replication-With-Skytool3/"/>
   <updated>2016-04-19T09:55:11-04:00</updated>
   <id>http://hunleyd.github.io/Logical-Replication-With-Skytool3</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://cdn2.iconfinder.com/data/icons/color-svg-cloud-icons/512/cloud_refresh-512.png&quot; width=225 height=225 border=0 align=left&gt; UPDATE: My coworker Richard liked this write up, and Skytools, so much he threw together a demo script. You can get it &lt;a href=&quot;https://github.com/richyen/toolbox/blob/master/pg/londiste/londiste_demo.sh&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I recently had to do a &lt;em&gt;near-zero downtime&lt;/em&gt; upgrade from PostgreSQL 8.4.x to PostgreSQL 9.4.x for a custmer. I couldn&amp;#39;t use streaming replication because of the change in major version (and because it&amp;#39;s simply not present in 8.x), so that left me looking at &lt;em&gt;logical replication&lt;/em&gt; options. Usually, everyone else would be thinking Slony right here. I&amp;#39;ve only messed with Slony a few times, but each time was a pita, and the whole thing just seemed overly complicated to me. So I decided to give Londiste a look.&lt;/p&gt;

&lt;p&gt;Londiste is part of the Skytools suite, originally developed by Skype back when they were a &amp;#39;no central node&amp;#39; setup. As such, the thing was literally born to be &amp;quot;master-master&amp;quot; and assumes nodes come and go at will, so it&amp;#39;s got all the tools to handle bringing nodes up/down, marking them active/inactive, catching them up, etc. It&amp;#39;s written in Python, and uses plain text ini files for configuration.&lt;/p&gt;

&lt;p&gt;There&amp;#39;s really only two hurdles that I found with using Londiste. First is that if you can&amp;#39;t get the rpms from the &lt;a href=&quot;http://yum.postgresql.org&quot;&gt;PGDG Yum Repo&lt;/a&gt; you&amp;#39;re looking at compiling from Git. And second, the online documentation for it is hard to find, hard to follow, and practically no one has used it so you can&amp;#39;t ask RandomPostgresPerson for help.&lt;/p&gt;

&lt;p&gt;Which is exactly why I&amp;#39;m writing this blog post. Here&amp;#39;s what I needed to get me through the migration in question. I hope it helps you, should you consider using Londiste for your own replication needs. To whit:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;As with other logical replication tools, you must ensure that all the tables to be replicated have a valid primary key. So before you even get started, determine which tables are missing them and then pass that list to your junior DBA and have them create pkeys while you continue on:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;sql
SELECT
n.nspname as schema,
c.relname as table
FROM
pg_class c
JOIN
pg_namespace n
ON
n.oid = c.relnamespace
WHERE
c.relkind = &amp;amp;#39;r&amp;amp;#39;
AND NOT EXISTS (
SELECT
    1
FROM
    pg_constraint con
WHERE
    con.conrelid = c.oid
AND
    con.contype = &amp;amp;#39;p&amp;amp;#39;
)
AND n.nspname &amp;amp;lt;&amp;amp;gt; ALL (
ARRAY [
    &amp;amp;#39;pg_catalog&amp;amp;#39;,
    &amp;amp;#39;sys&amp;amp;#39;,
    &amp;amp;#39;dbo&amp;amp;#39;,
    &amp;amp;#39;information_schema&amp;amp;#39;
]
);
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/94d1096767e154486dbfe8dd47f48275.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;On the PostgreSQL 9.4.x server that will be receiving the replicated data, we need to ensure that all roles are pre-created. We want all ownerships and grants to be identical when we&amp;#39;re done, right? You can use &lt;code&gt;pg_dumpall -g&lt;/code&gt; on the PostgreSQL 8.4.x to get a listing of roles.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Again, like Slony, we should pre-build the schema on the PostgreSQL 9.4.x server. I &lt;em&gt;think&lt;/em&gt; you can actually get Londiste to do this for you as part of the replication, but I couldn&amp;#39;t find anything online for sure, and I didn&amp;#39;t have time to add more experimentation here (we&amp;#39;re on the customer&amp;#39;s dime here, remember). So, use &lt;code&gt;pg_dump&lt;/code&gt; over the network and pipe it to &lt;code&gt;pg_restore&lt;/code&gt; to transfer the schema thusly:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
pg_dump \
-Fc \
-C \
-S \
-h IPofOldServer \
-U postgres \
myapp | \
pg_restore \
-d template1 \
-v \
-C \
-e \
-s
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/f0fcb06526f3b3f50dd0b57a091403b8.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install Skytools on the PostgreSQL 9.4.x server using the PGDG repo:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
yum -y install \
skytools-94 \
skytools-94-modules
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/00e6122b49c7f068c46e680f09ed396f.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Install Skytools from source on the PostgreSQL 8.4.x server:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
yum -y install \
python-devel \
asciidoc \
xmlto \
postgresql-devel
git clone git://github.com/markokr/skytools.git
cd skytools
git submodule init
git submodule update
./autogen.sh
./configure
make
make install
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/555804964c2e2564b08fff01c0d5a53a.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Restart the PostgreSQL 8.4.x cluster to load the new libs and modules&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now we configure the Londiste ticker. Note, we have &lt;em&gt;trust&lt;/em&gt; setup for the postgres user in &lt;code&gt;pg_hba.conf&lt;/code&gt; so there is no password= in the connection strings. Adjust to meet your setup:
&lt;noscript&gt;&lt;pre&gt;```bash
mkdir -pv ~postgres/londiste-config/{log,pid}
cd ~postgres/londiste-config
cat &amp;lt;&amp;lt; EOF &amp;gt; ticker.ini
[pgqd]
base&lt;em&gt;connstr = user=postgres host=IPofOldServer
database&lt;/em&gt;list = myapp
logfile = log/ticker.log
pidfile = pid/ticker.pid
EOF&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/d65e5dfd27365b086dcddb118d586308.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Start up the ticker, to provide the replication &amp;quot;heartbeat&amp;quot; by running &lt;code&gt;pgqd -d ticker.ini&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check the &lt;code&gt;ticker.log&lt;/code&gt; to ensure there are no warnings or errors! You can stop the ticker with &lt;code&gt;pgqd -s ticker.ini&lt;/code&gt; while you fix things.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, we tell Londiste about the master node (same note applies about the lack of password in the connection string):
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
cd ~postgres/londiste-config
cat &amp;amp;lt;&amp;amp;lt; EOF &amp;amp;gt; master.ini
[londiste3]
db = user=postgres host=IPofOldServer dbname=myapp
queue_name = myappq
loop_delay = 0.5
logfile = log/master.log
pidfile = pid/master.pid
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/2a9317184569c8fabd26945595c480f9.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;We have to actually create the master node as the root node by doing:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
londiste3 \
master.ini \
create-root \
master &amp;amp;#39;user=postgres host=IPofOldServer dbname=myapp&amp;amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/fcfb0ff9b3cbb2c724ea8da36723fde1.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check the master.log to see if you have a line like &lt;code&gt;INFO Node &amp;quot;master&amp;quot; initialized for queue &amp;quot;myappq&amp;quot; with type &amp;quot;root&amp;quot;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Now, spin up the master&amp;#39;s replication worker process by running &lt;code&gt;londiste3 -d master.ini worker&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Next, we configure our slave node (same note applies about the lack of password in the connection string):
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
cd ~postgres/londiste-config
cat &amp;amp;lt;&amp;amp;lt; EOF &amp;amp;gt; slave.ini
[londiste3]
db = user=postgres host=127.0.0.1 dbname=myapp
queue_name = myappq
loop_delay = 0.5
logfile = log/slave.log
pidfile = pid/slave.pid
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/94ac2474673bd3dd9fe0e1d77a12c791.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Like the master, we have to create the slave node. I created it as a &lt;code&gt;leaf&lt;/code&gt; but I could have created it as a &lt;code&gt;branch&lt;/code&gt; if we we&amp;#39;re going to cascade replication:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
londiste3 \
slave.ini \
create-leaf slave &amp;amp;#39;user=postgres host=127.0.0.1 dbname=myapp&amp;amp;#39; \
--provider=&amp;amp;#39;user=postgres host=IPofOldServer dbname=myapp&amp;amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/bdcd1644a185863f823749d4502e2fa8.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Check the slave.log to see if you have the line &lt;code&gt;INFO Node &amp;quot;slave&amp;quot; initialized for queue &amp;quot;myappq&amp;quot; with type &amp;quot;branch&amp;quot;&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Spin up the slave&amp;#39;s replication worker process by running &lt;code&gt;londiste3 -d slave.ini worker&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Tell the master node that we want to replicate all the tables in the db (&lt;code&gt;londiste3 master.ini add-table --all&lt;/code&gt;) as well as all the sequences (&lt;code&gt;londiste3 master.ini add-seq --all&lt;/code&gt;). Note that this only adds the tables that currently exist. If you add new tables to the master db, you need to &lt;code&gt;londiste3 master.ini add-table tablename&lt;/code&gt; to add them to replication. Ditto for new sequences.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;For the slave node, also replicate all the tables (&lt;code&gt;londiste3 slave.ini add-table --all&lt;/code&gt;) and all the sequences (&lt;code&gt;londiste3 slave.ini add-seq --all&lt;/code&gt;). Note that this only adds the tables that currently exist. If you add new tables to the master db, you need to &lt;code&gt;londiste3 slave.ini add-table tablename&lt;/code&gt; to add them to replication. Ditto for new sequences.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this point, replication is actually up and running. Any changes occurring on the master node are being replicated to the slave node. That&amp;#39;s all you need to do.&lt;/p&gt;

&lt;p&gt;But what about the data that was already in the master db? You don&amp;#39;t need to do anything. It&amp;#39;s already replicating. You can forcibly tell Londiste to &amp;#39;catch things up&amp;#39; by doing &lt;code&gt;londiste3 slave.ini resync --all&lt;/code&gt; if you like though.&lt;/p&gt;

&lt;p&gt;If you want to check on the replication at any point, simply issue &lt;code&gt;londiste3 slave.ini status&lt;/code&gt; or to be more pedantic &lt;code&gt;londiste3 slave.ini compare&lt;/code&gt; which will examine row counts and md5sums between master and slave.&lt;/p&gt;

&lt;p&gt;Enjoy your new cross-version logical replication!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>PostgreSQL Streaming Replication in 10 Minutes</title>
   <link href="http://hunleyd.github.io/PostgreSQL-Streaming-Replication-In-10-Minutes/"/>
   <updated>2016-04-18T10:47:10-04:00</updated>
   <id>http://hunleyd.github.io/PostgreSQL-Streaming-Replication-In-10-Minutes</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;https://unitedlayer.com/sites/default/files/dr-icons-01.png&quot; border=0 align=right&gt;While there&amp;#39;s absolutely nothing new in this blog post that isn&amp;#39;t covered by the wonderful &lt;a href=&quot;http://www.postgresql.org/docs/current/static/index.html&quot;&gt;docs&lt;/a&gt; I&amp;#39;ve been asked multiple times now by customers if we had some kind of &amp;#39;crib notes&amp;#39; format for how to get replication up and running. And since I just had to set this up and document it for a customer, I figured I might as well post it so that I can simply point people to it in the future. So here we are.&lt;/p&gt;

&lt;p&gt;Now, let&amp;#39;s get started. I assume you already have two PostgreSQL servers up with the binaries installed. For simplicity&amp;#39;s sake, we will these machines &amp;#39;master&amp;#39; and &amp;#39;standby&amp;#39;. Note too that I&amp;#39;m using &lt;code&gt;replication slots&lt;/code&gt; which needs PostgreSQL 9.4.0 or later; if you&amp;#39;re using something earlier, simply ignore the slot stuff.&lt;/p&gt;

&lt;p&gt;Let&amp;#39;s get started!&lt;/p&gt;

&lt;p&gt;On the master, do the following:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
cat &amp;amp;lt;&amp;amp;lt; EOF &amp;amp;gt;&amp;amp;gt; postgresql.conf
    wal_level = hot_standby
    full_page_writes = on
    wal_log_hints = on
    max_wal_senders = 6
    max_replication_slots = 6
    hot_standby = on
    hot_standby_feedback = on
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/78f5bca50fb14e5a6525a5f63bb5bf47.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;On the master, add the external IP addresses of the servers to &lt;code&gt;pg_hba.conf&lt;/code&gt;:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
cat &amp;amp;lt;&amp;amp;lt; EOF &amp;amp;gt;&amp;amp;gt; pg_hba.conf
    host replication repl_user IP_of_master/32 md5
    host replication repl_user IP_of_standby/32 md5
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/8af26b72f5a79632494d3203547d9478.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Restart PostgreSQL on the master for the changes to take affect&lt;/p&gt;

&lt;p&gt;On the master, create the replication user:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
psql \
  -d postgres \
  -U postgres \
  -c &amp;amp;quot;CREATE ROLE repl_user LOGIN REPLICATION ENCRYPTED PASSWORD &amp;amp;#39;secretpasswordhere&amp;amp;#39;;&amp;amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/a279de475a73e8ee490b1c7af7859ba4.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;On the master, create the replication slot for the standby:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
psql \
  -d postgres \
  -U postgres \
  -c &amp;amp;quot;SELECT * FROM pg_create_physical_replication_slot(&amp;amp;#39;standby1&amp;amp;#39;);&amp;amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/2fb5070785137383fe42eec0225d8c0e.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;On the standby, wipe the existing cluster:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
cd /var/lib/pgsql/9.4/data
pg_ctl -D $PWD -mf stop
cd ..
rm -rfv data
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/2adfa47297b9d0006ba172d967e1a575.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;On the standby, use the &lt;code&gt;pg_basebackup&lt;/code&gt; command to clone the master (enter the &lt;code&gt;repl_user&lt;/code&gt;&amp;#39;s password from above when prompted):
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
pg_basebackup \
  -D data \
  -Fp \
  -R \
  -Xs \
  -c fast \
  -l &amp;amp;#39;initial clone&amp;amp;#39; \
  -P \
  -v \
  -h IP_of_master \
  -U repl_user
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/3e37d6f4ede70675270b92d7660cd1d0.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;On the standby, tweak the &lt;code&gt;recovery.conf&lt;/code&gt; that was created for you and add the replication slot name:
&lt;noscript&gt;&lt;pre&gt;&lt;code&gt;bash
cd data
cat &amp;amp;lt;&amp;amp;lt; EOF &amp;amp;gt;&amp;amp;gt; recovery.conf
primary_slot_name = &amp;amp;#39;standby1&amp;amp;#39;
EOF
&lt;/code&gt;&lt;/pre&gt;&lt;/noscript&gt;&lt;script src=&quot;https://gist.github.com/hunleyd/e914002c0c78c3a1c03515c60e2b5aaa.js&quot;&gt; &lt;/script&gt;&lt;/p&gt;

&lt;p&gt;Start the standby up&lt;/p&gt;

&lt;p&gt;And that&amp;#39;s it. You should be all done. Easy, right?&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Hello, eero</title>
   <link href="http://hunleyd.github.io/Hello_eero/"/>
   <updated>2016-03-30T10:00:25-04:00</updated>
   <id>http://hunleyd.github.io/Hello_eero</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://www.eero.com&quot;&gt;&lt;img src=&quot;https://iotlist-production.s3-us-west-2.amazonaws.com/uploads/production/post_attachment/937/file/Eero1.jpg&quot; border=0 align=left&gt;&lt;/a&gt;I don&amp;#39;t normally back things on Indiegogo (I&amp;#39;m a Kickstarter snob), but I jumped &lt;em&gt;all over&lt;/em&gt; the eero. I have always had issues with the wifi coverage in my home. I&amp;#39;ve tried everything I can think of to alleviate the issues; differernt brands of routers, flashing different OSS firmwares, &amp;#39;upgrading&amp;#39; to SOHO equipment instead of consumer equipment, moving them all over the damn house, etc. Nothing solved all the issues. Until now.&lt;/p&gt;

&lt;p&gt;I&amp;#39;ve actully had the eero up and running for a while now (almost two months already) but I held off saying anything because I wanted to see if issues would crop back up or not and I wanted to get past the initial &amp;#39;cool, it works!&amp;#39; feeling. So here I am ~60 days later, and I&amp;#39;m &lt;em&gt;still&lt;/em&gt; feeling the &amp;#39;this is cool&amp;#39; feeling towards the eero.&lt;/p&gt;

&lt;p&gt;I bought the triple set, put the &amp;#39;main&amp;#39; one in the basement by the cable modem, the next one on the other end of the house on the first floor, and the final one in the middle of the house on the second floor. Setup was stupid simple and hassle free. Like, Tina or Emily could have done this, simple. Once up and talking to each other, they then scanned all the wifi leakage from the neighbors and picked a channel with the least amount of interference and started handing out DHCP leases to my devices. Easy peasy.&lt;/p&gt;

&lt;p&gt;Speaking of &amp;#39;my devices&amp;#39;.. here&amp;#39;s everything I&amp;#39;ve got hooked up to the eero-powered wifi:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;1 x Nest thermostat&lt;/li&gt;
&lt;li&gt;2 x &amp;quot;smart&amp;quot; tv&lt;/li&gt;
&lt;li&gt;1 x &amp;quot;smart&amp;quot; bluray player&lt;/li&gt;
&lt;li&gt;1 x Nexus Player /  Android TV&lt;/li&gt;
&lt;li&gt;1 x PS3&lt;/li&gt;
&lt;li&gt;2 x PS4&lt;/li&gt;
&lt;li&gt;1 x Sonos speaker&lt;/li&gt;
&lt;li&gt;2 x Macbook Pro&lt;/li&gt;
&lt;li&gt;2 x Android phones&lt;/li&gt;
&lt;li&gt;3 x Android tablets&lt;/li&gt;
&lt;li&gt;2 x iPhone&lt;/li&gt;
&lt;li&gt;1 x iPad mini&lt;/li&gt;
&lt;li&gt;1 x Chromebook&lt;/li&gt;
&lt;li&gt;1 x Lenovo laptop&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, I didn&amp;#39;t make that list to impress you, or to depress myself at how much money I&amp;#39;ve spent over the years. That list is to show what&amp;#39;s connected to the eero and to show that there is a big variety of devices. Some are 2.4GHz, some 5GHz, some both. Some do jumbo frames. Some support wifi media extensions. And they all work &lt;em&gt;flawlessly&lt;/em&gt; while connected to the eero. &lt;em&gt;No matter how many are connected simultaneoussly.&lt;/em&gt; Which is the first time ever. Seriously. It works so well, I went around and &lt;em&gt;unplugged&lt;/em&gt; Ethernet from devices that had it and put them on the wifi!&lt;/p&gt;

&lt;p&gt;We can have multiple Netflix streams going while playing online in an FPS while streaming music to another room while someone else is on the laptop working. And no one even notices the other users. It&amp;#39;s epic. I now actually have a valid reason for buying the most expensive upload speed my ISP offers :)&lt;/p&gt;

&lt;p&gt;As for gripes? Well, of course no system is perfect. In its quest to make things stupid simple, there&amp;#39;s a lot the eero mgmt app doesn&amp;#39;t let you do. You can&amp;#39;t, for example, blacklist a MAC. Or turn off uplink for certain MACs between certain hours of the day. You can&amp;#39;t throttle certain devices. Basically, all the things nerds love to mess with that just confuse the normal consumer. And I&amp;#39;m (mostly) OK with that. I&amp;#39;m sure some of the functionality is coming in future updates, but even if it doesn&amp;#39;t, I don&amp;#39;t care. It just works. And it works well and easy enough that I can talk the wife through an issue over the phone while I&amp;#39;m on the other side of the planet.&lt;/p&gt;

&lt;p&gt;I &amp;lt;3 my eero.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Glutton for Punishment</title>
   <link href="http://hunleyd.github.io/Glutton-for-punishment/"/>
   <updated>2016-02-29T05:14:50-05:00</updated>
   <id>http://hunleyd.github.io/Glutton-for-punishment</id>
   <content type="html">&lt;p&gt;&lt;img src=&quot;http://www.theshell.guru/wp-content/uploads/2015/12/osx-logo3.png&quot; border=0 align=right&gt;I recently got a new Macbook Pro from work as my old one was having keyboard issues and since it was 3+ yrs old they deemed it not worth fixing. As you probably know, I spent a lot of time and effort on the previous mbp to get &lt;a href=&quot;http://www.gentoo.org&quot;&gt;Gentoo&lt;/a&gt; up and running on it. I chose &lt;em&gt;not&lt;/em&gt; to do so with this one.&lt;/p&gt;

&lt;p&gt;While I have looked into it and believe that I could get Gentoo up and running fairly easily, I&amp;#39;ve decided to skip it for now and try to live with OSX. I travel for work and never know what I&amp;#39;m going to be asked to do when onsite. Sometimes I have to present things on a projector while other times the customer only has 5Ghz wifi available. And thanks to the proprietary nature of these machines, these features are either non-functional or sub-optimal under Linux. I&amp;#39;m also getting tired of our IT staff telling me Linux isn&amp;#39;t supported whenever I have an issue, even if that issue clearly doesn&amp;#39;t have anything to do with the OS. And several other minor annoyances that have added up over my three yrs tenure here.&lt;/p&gt;

&lt;p&gt;So, yeah. I&amp;#39;ve decided to sign up for the pain of staying in OSX. So far, I think I&amp;#39;ve managed to coerce the system into a &amp;#39;feel-alike&amp;#39; of my prior KDE 5 Plasma environment but it&amp;#39;s taken a lot of tweaking and Googling and setting of magic CLI commands to get OSX to do my bidding. And I&amp;#39;ve had to buy more than a few apps to get functionality that I got for free on Linux, which chaps my ass.&lt;/p&gt;

&lt;p&gt;So we&amp;#39;ll see how this lasts. Or doesn&amp;#39;t.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Flyover State</title>
   <link href="http://hunleyd.github.io/Flyover-state/"/>
   <updated>2016-02-09T11:59:24-05:00</updated>
   <id>http://hunleyd.github.io/Flyover-state</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://howmuch.net/content/images/1600/cost-of-driving-from-Columbus-49c5.png&quot;&gt;&lt;img src=&quot;http://howmuch.net/content/images/1600/cost-of-driving-from-Columbus-49c5.png&quot; border=0 width=208 height=188&quot; align=left style=&quot;PADDING-RIGHT: 5px&quot;&gt;&lt;/a&gt;Being a native of Ohio, I can assure you that I&amp;#39;ve heard every form of &amp;#39;flyover state&amp;#39; insult you could care to level at me. And while I won&amp;#39;t debate the merits of Ohio in this post, I will take a minute to point out something that I&amp;#39;ve been saying for quite some time.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Ohio really is pretty centrally located to anywhere you might care to be other than the left coast.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The map I&amp;#39;ve linked to in this post shows what $50 worth of gas means to someone from Columbus, OH as far as their ability to drive anywhere. Of course, it makes an assumption about the price of gas and the car&amp;#39;s mpg (24mpg, iirc) but the point stands.&lt;/p&gt;

&lt;p&gt;And this is what I&amp;#39;ve been telling my coworker a lot lately. I travel periodically for business, and whenever I do, I &lt;strong&gt;drive&lt;/strong&gt; (unless it&amp;#39;s just way too impractical). It &lt;em&gt;alway&lt;/em&gt; trips people out when I do. I&amp;#39;d much rather grab a rental car, and spend a day on my own schedule seeing the country then being crammed in like cattle and dealing with the TSA. And this image shows that I&amp;#39;m generally saving the company money as well.&lt;/p&gt;

&lt;p&gt;So, you all can keep flying over. In the meantime, I&amp;#39;ll be driving around enjoying myself,&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Efficient, yet Creepy</title>
   <link href="http://hunleyd.github.io/Efficient-Yet-Creepy/"/>
   <updated>2016-01-21T13:30:00-05:00</updated>
   <id>http://hunleyd.github.io/Efficient-Yet-Creepy</id>
   <content type="html">&lt;p&gt;So I&amp;#39;m sitting here seting up a new Internet connected device I bought recently (more on it later) and I can&amp;#39;t seem to get it to setup properly. I can create an account on their site, I can login to said account, I can power on said device and connect to it using the app and configure it to use my home wifi, but the device just won&amp;#39;t ever finish connecting and syncing w/ my account on the site.&lt;/p&gt;

&lt;p&gt;I try this about half a dozen times, with a few reboots and even a reset of the device in there. Still no luck. So I power it off, set it aside, and go do some things IRL thinking &amp;quot;I&amp;#39;ll come back to it&amp;quot;. Not five minutes later, I get an email on my phone from Tech Support at the device&amp;#39;s company saying thusly:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We noticed that you are having problems adding $device to your system.
To assist you with the process, we would like to first push a firmware
update to your $device. Please keep your $device plugged in and we
will take care of the rest. We will send you another email when you
have been updated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now &lt;em&gt;that&amp;#39;s&lt;/em&gt; efficient. And &lt;strong&gt;super creepy&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;I kinda like it :D&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Huawei Watch Review</title>
   <link href="http://hunleyd.github.io/Huawei-Watch-Review/"/>
   <updated>2016-01-21T12:00:00-05:00</updated>
   <id>http://hunleyd.github.io/Huawei-Watch-Review</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.gethuawei.com/buy-huawei-watch&quot;&gt;&lt;img src=&quot;http://www.gethuawei.com/media/wysiwyg/pdpcms/huawei_watch/watches/stainless-leather1.png&quot; width=150 height=197 border=0 align=left&gt;&lt;/a&gt;A couple of my mates wanted me to let them know what I thought of the &lt;a href=&quot;http://www.huawei.com/en/&quot;&gt;Huawei&lt;/a&gt; Watch (hereafter, &amp;#39;H&amp;#39;) after upgrading from the &lt;a href=&quot;https://www.motorola.com/us/products/moto-360&quot;&gt;Moto 360&lt;/a&gt; (hereafter, 360) and spending some time getting to know the &amp;#39;H&amp;#39;. So here&amp;#39;s my thoughts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TL;DR&lt;/strong&gt; Better than the 360 in every way that counts&lt;/p&gt;

&lt;p&gt;I should probably preface this review by saying that I loved (and still love) the 360. I was excited to buy it, I was excited to see it ship to my house, I was pissed that I wasn&amp;#39;t at my house when it arrived (long-term gig in LA), I was proud to wear it, and I loved showing it to anyone who cared (and probably more than a few who didn&amp;#39;t). Having said that, the 360 I had was a Gen 1 in every sense. It was the first watch Moto had made. It was the first smartwatch Moto had made. It was the flagship Android Wear device. And the minute I got my hands on a 2&lt;sup&gt;nd&lt;/sup&gt; gen device, those things were readily apparent.&lt;/p&gt;

&lt;p&gt;Don&amp;#39;t get me wrong. It&amp;#39;s not all sunshine and roses w/ the &amp;#39;H&amp;#39;. For example, charging is actually quite a bit of a sorrier state than with the 360. You see, the 360 has a standard Qi charging mechanism. So while there is a cute little official charging stand, you can make do with &lt;em&gt;any&lt;/em&gt; Qi charger you have once you figure out where to place the watch on the coil. And the official charger uses a standard, I-have-tons-of-them-all-of-the-place USB-A to USB-micro cable. The &amp;#39;H&amp;#39;, on the other hand, uses pogo pins to connect to it&amp;#39;s charger. Which means you &lt;u&gt;have&lt;/u&gt; to use a compatible charger (of which there is only one currently). Take a road trip and forget your charger? Buy another one or go without your watch. And to add to the insult, the charger cable, while having a standard USB-A plug on one end, is terminated inside the charging puck. So if the cord should go bad or isn&amp;#39;t long enough, too bad. You can&amp;#39;t use one of those USB cables from the pile in your desk drawer. Nope. Sorry. And then, of course, there&amp;#39;s the &lt;em&gt;act&lt;/em&gt; of charging the watch. With the 360, you simply slide it into its dock, and you&amp;#39;re done. Heck, after a while, you can almost lightly toss it into the charger like a game of corn hole and it will charge. Half asleep? Drunk? No problem. Tis easy. The &amp;#39;H&amp;#39; on the other hand? You have to line up the pogos &lt;b&gt;exactly&lt;/b&gt; or you aren&amp;#39;t getting any juice. And I mean exact. Doesn&amp;#39;t matter if the watch and the charger look perfectly aligned and centered with each other. If the pins aren&amp;#39;t perfect, no juice for you! I&amp;#39;ve already had my share of waking up to find out the watch didn&amp;#39;t charge. It SUCKS.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Pro tip: I&amp;#39;ve found that hovering the &amp;#39;H&amp;#39; right over the charging puck allows the magnets in them to pull them together in such a way that the puck &amp;quot;leaps&amp;quot; up and attaches to the watch with the pogo pins perfectly positioned&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;So yeah, charging. The one thorn in the rose. But worth it, imho.&lt;/p&gt;

&lt;p&gt;Review: ★★★★★&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>I Have The Power</title>
   <link href="http://hunleyd.github.io/I-Have-The-Power/"/>
   <updated>2016-01-16T19:00:00-05:00</updated>
   <id>http://hunleyd.github.io/I-Have-The-Power</id>
   <content type="html">&lt;p&gt;&lt;a href=&quot;https://www.snappower.com/snaprays-guidelight/&quot;&gt;&lt;img src=&quot;https://www.snappower.com/wp-content/themes/enfold-child/images/guidelight_review.jpg&quot; border=0 align=left height=262 width=262&gt;&lt;/a&gt;A while back, I ran across a little project on &lt;a href=&quot;http://www.kickstarter.com&quot;&gt;Kickstarter&lt;/a&gt; from a company called &lt;a href=&quot;http://www.snappower.com&quot;&gt;SnapPower&lt;/a&gt;. The project was for a product called Guidelights.&lt;/p&gt;

&lt;p&gt;Now, I&amp;#39;m a &amp;quot;big boy&amp;quot; and don&amp;#39;t need a night light, but I do wander around the house after dark quite a bit and hate turning on the lights when I&amp;#39;m in a room for like a whole minute. So The concept of having LED lights embedded into the outlet cover and having them turn on/off based on the ambient light in the room sounded pretty cool. And the fact that there&amp;#39;s no wiring or anything was slick. So I ponied up and ordered some.&lt;/p&gt;

&lt;p&gt;I gotta tell you, they rock! I now have one in the upstairs hallyway, another at the bottom of the stairs, and a third on the island in the kitchen. It&amp;#39;s freaking perfect. Seriously. And like I said, there&amp;#39;s &lt;em&gt;no skill involved&lt;/em&gt;. If you can work a flat head screwdriver, you can install these!&lt;/p&gt;

&lt;p&gt;In fact, when Stephanie movies into her apartment (soonish), I&amp;#39;ll be outfitting her place with a few of these as well. They&amp;#39;re really that good,&lt;/p&gt;

&lt;p&gt;Review: ★★★★★&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.snappower.com/snappower-chargers/&quot;&gt;&lt;img src=&quot;https://www.snappower.com/wp-content/themes/enfold-child/images/charger_review.jpg&quot; border=0 align=left height=262 width=262&gt;&lt;/a&gt;As much as I love the guidelights, I was stoked when SnapPower announced their Snap Power Chargers.&lt;/p&gt;

&lt;p&gt;I don&amp;#39;t know what it&amp;#39;s like in your household, but all four of us have smart phones, three of us have tablets, and two of us have smart watches. Someone &lt;em&gt;always&lt;/em&gt; needs to charge something. And my family is &lt;strong&gt;horrible&lt;/strong&gt; about removing their chargers from outlets when they&amp;#39;re done. And one person in particular has taken to unplugging whatever is &amp;quot;in the way&amp;quot; so she can charge her phone close to wherever she&amp;#39;s sitting! Clearly, a solution that adds USB ports and frees up electrical outlets is a solution I need to have.&lt;/p&gt;

&lt;p&gt;So I eagerly bought &lt;em&gt;five&lt;/em&gt; of these things. I installed all but one yesterday, and I gotta say it is as good of an investment as the light covers. I will be installing a few of these in Steph&amp;#39;s apartment also. Now, I&amp;#39;ll grant you that they are not &amp;quot;quick charge&amp;quot;. And there&amp;#39;s only one USB facing the right side of the cover instead of one on both the left and right. But I understand there&amp;#39;s only so much room in these things, and only so much power you can leech off the contacts. So I&amp;#39;m not terribly upset. It would be nice though if you could choose left or right when ordering.&lt;/p&gt;

&lt;p&gt;Honestly, I&amp;#39;m kinda stoked to see what this company comes up with next. Of all the random crap I&amp;#39;ve backed on Kickstarter, SnapPower is easily the most useful and easiest to recommend to others.&lt;/p&gt;

&lt;p&gt;Review: ★★★★✩&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>More Bloggy Goodness</title>
   <link href="http://hunleyd.github.io/More-Bloggy-Goodness/"/>
   <updated>2016-01-15T20:00:00-05:00</updated>
   <id>http://hunleyd.github.io/More-Bloggy-Goodness</id>
   <content type="html">&lt;p&gt;It&amp;#39;s been a bit of a busy day for me and my blog. I&amp;#39;ve added:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;an RSS feed&lt;/li&gt;
&lt;li&gt;an archive&lt;/li&gt;
&lt;li&gt;tags&lt;/li&gt;
&lt;li&gt;Disqus comments&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All with as little effort on my part as I&amp;#39;ve &lt;em&gt;ever&lt;/em&gt; put into a blog. I &lt;strong&gt;fucking&lt;/strong&gt; love this blogging platform!&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Once More, With Feeling</title>
   <link href="http://hunleyd.github.io/Once-More-With-Feeling/"/>
   <updated>2016-01-15T19:00:00-05:00</updated>
   <id>http://hunleyd.github.io/Once-More-With-Feeling</id>
   <content type="html">&lt;p&gt;Welcome to the new blog.&lt;/p&gt;

&lt;p&gt;That&amp;#39;s right, I&amp;#39;m running my own blog &lt;em&gt;once again&lt;/em&gt;. I know, I know. It&amp;#39;s been a while. And I&amp;#39;ve picked &lt;em&gt;yet another&lt;/em&gt; platform for hosting my blog. But you know what? You&amp;#39;re just going to have to suck it up. I&amp;#39;ve been itching to make some new posts for a while now, and the platforms at my disposal, &lt;em&gt;cough&lt;/em&gt; &lt;em&gt;G+&lt;/em&gt; &lt;em&gt;cough&lt;/em&gt;, just haven&amp;#39;t really cut it. Sure, they sorta worked, but with the recent direction that platform is headed? Forget it.&lt;/p&gt;

&lt;p&gt;So then a coworker mentioned standing up &lt;em&gt;his&lt;/em&gt; new blog using &lt;a href=&quot;https://www.github.com&quot;&gt;GitHub&lt;/a&gt; and &lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; and I was blown away at how it worked. It just &lt;em&gt;so totally fit&lt;/em&gt; with my workflow and preferences. So here we are. Everything old is new again. Or something.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.wired.com/wp-content/uploads/2014/08/poster.jpg&quot; border=0 alt=&quot;Yeah, it's that kinda blog&quot;&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>

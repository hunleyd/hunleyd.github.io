<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.4.0">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2018-09-24T15:13:55-04:00</updated><id>//</id><title type="html">Douglas J Hunley</title><subtitle>It's not that I'm anti-social; I'm just not user-friendly</subtitle><entry><title type="html">Monitoring pgBackRest with tail_n_mail</title><link href="/posts/Monitoring-pgBackRest-with-tail_n_mail/" rel="alternate" type="text/html" title="Monitoring pgBackRest with tail_n_mail" /><published>2018-09-24T10:58:22-04:00</published><updated>2018-09-24T10:58:22-04:00</updated><id>/posts/Monitoring-pgBackRest-with-tail_n_mail</id><content type="html" xml:base="/posts/Monitoring-pgBackRest-with-tail_n_mail/">&lt;p&gt;After a lively discussion at work today about monitoring tools and uses cases, I decided to see if I could use &lt;a href=&quot;https://bucardo.org/tail_n_mail/&quot;&gt;tail_n_mail&lt;/a&gt;, which I already use to monitor my PostgreSQL logs, to monitor my pgBackRest logs. It turns out that it can, and can do so fairly trivially.&lt;/p&gt;

&lt;p&gt;For reference, our &lt;code class=&quot;highlighter-rouge&quot;&gt;.tail_n_mail.conf&lt;/code&gt; looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## Config file for the tail_n_mail program
## This file is automatically updated
LOG_LINE_PREFIX: %t P%p
EMAIL: you@gme.com
MAILSUBJECT: HOST pgBackRest errors NUMBER

INCLUDE: WARN:
INCLUDE: ERROR:
INCLUDE: FATAL:
INCLUDE: PANIC:


FILE1: /var/log/pgbackrest/pgbackrest.log
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You would need to change the &lt;code class=&quot;highlighter-rouge&quot;&gt;EMAIL&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;FILE1&lt;/code&gt; and the rest should just work.&lt;/p&gt;

&lt;p&gt;To actually invoke the monitoring, simply add a &lt;code class=&quot;highlighter-rouge&quot;&gt;cron&lt;/code&gt; entry that looks like:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;* * * * * /path/to/tail_n_mail ~/.tailnmail.conf --pgmode=0
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;(Obviously, you should adjust the periodicity. I &lt;strong&gt;highly&lt;/strong&gt; doubt you need to check every minute.)&lt;/p&gt;

&lt;p&gt;Once you’ve saved the &lt;code class=&quot;highlighter-rouge&quot;&gt;crontab&lt;/code&gt;, you should be all good. If you doubt the setup, you can add &lt;code class=&quot;highlighter-rouge&quot;&gt;--mailzero&lt;/code&gt; to the invocation to get an email even if everything is OK.&lt;/p&gt;

&lt;p&gt;See? Easy.&lt;/p&gt;</content><category term="postgresql" /><summary type="html">After a lively discussion at work today about monitoring tools and uses cases, I decided to see if I could use tail_n_mail, which I already use to monitor my PostgreSQL logs, to monitor my pgBackRest logs. It turns out that it can, and can do so fairly trivially.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/%7B%22feature%22=%3E%22db.jpg%22%7D" /></entry><entry><title type="html">pgBouncer and auth pass-thru</title><link href="/posts/pgBouncer-and-auth-pass-thru/" rel="alternate" type="text/html" title="pgBouncer and auth pass-thru" /><published>2018-08-07T08:53:28-04:00</published><updated>2018-08-07T08:53:28-04:00</updated><id>/posts/pgBouncer-and-auth-pass-thru</id><content type="html" xml:base="/posts/pgBouncer-and-auth-pass-thru/">&lt;p&gt;I’ve noticed several individuals inquiring lately about pgBouncer and how they can avoid putting all users and their passwords in it’s &lt;code class=&quot;highlighter-rouge&quot;&gt;auth_file&lt;/code&gt;. After the most recent such inquiry (hi Richard!) I decided I’d write this post to
hopefully make it clearer how to use ‘pass-thru auth’ and avoid maintaining your users and their passwords in an external file. So let’s see what this takes, shall we?&lt;/p&gt;

&lt;p&gt;First, install pgBouncer as per your OS (&lt;code class=&quot;highlighter-rouge&quot;&gt;yum&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;apt&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;brew&lt;/code&gt;, etc):&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; brew install pgbouncer
Updating Homebrew...
==&amp;gt; Auto-updated Homebrew!
Updated 1 tap (homebrew/core).
==&amp;gt; Updated Formulae
&amp;lt;snip&amp;gt;
==&amp;gt; Downloading https://homebrew.bintray.com/bottles/pgbouncer-1.8.1.high_sierra
######################################################################## 100.0%
==&amp;gt; Pouring pgbouncer-1.8.1.high_sierra.bottle.tar.gz
==&amp;gt; Caveats
The config file: /usr/local/etc/pgbouncer.ini is in the &quot;ini&quot; format and you
will need to edit it for your particular setup. See:
https://pgbouncer.github.io/config.html

The auth_file option should point to the /usr/local/etc/userlist.txt file which
can be populated by the /usr/local/opt/pgbouncer/bin/mkauth.py script.

To have launchd start pgbouncer now and restart at login:
  brew services start pgbouncer
Or, if you do not want/need a background service you can just run:
  pgbouncer -q /usr/local/etc/pgbouncer.ini
==&amp;gt; Summary
🍺  /usr/local/Cellar/pgbouncer/1.8.1: 17 files, 399.9KB
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Great, so now we have pgBouncer installed.&lt;/p&gt;

&lt;p&gt;To make life easier on ourselves, we’re going to &lt;strong&gt;temporarily&lt;/strong&gt; enable trusted local socket connections in our &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# TYPE  DATABASE        USER            ADDRESS                 METHOD

# &quot;local&quot; is for Unix domain socket connections only
local   all             all trust
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Right now, this is the only line in my &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt;. Let’s SIGHUP the postmaster so it takes affect:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; pg_ctl -D &lt;span class=&quot;nv&quot;&gt;$PGDATA&lt;/span&gt; reload
server signaled
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And test it:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; &lt;span class=&quot;nb&quot;&gt;unset &lt;/span&gt;PGPASSWORD ; psql -U doug -d doug -c &lt;span class=&quot;s2&quot;&gt;&quot;select now();&quot;&lt;/span&gt;
┌───────────────────────────────┐
│              now              │
├───────────────────────────────┤
│ 2018-08-07 13:19:06.343245-04 │
└───────────────────────────────┘
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 row&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Time: 1.959 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;OK, we can connect without issue.&lt;/p&gt;

&lt;p&gt;Let’s configure pgBouncer now. As per the output above, I need to edit &lt;code class=&quot;highlighter-rouge&quot;&gt;/usr/local/etc/pgbouncer.ini&lt;/code&gt; but yours is probably in plain old &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-config highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[&lt;span class=&quot;n&quot;&gt;databases&lt;/span&gt;]

; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;over&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Unix&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;
* =

[&lt;span class=&quot;n&quot;&gt;pgbouncer&lt;/span&gt;]

&lt;span class=&quot;n&quot;&gt;logfile&lt;/span&gt; = /&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;pgbouncer&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pidfile&lt;/span&gt; = /&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;pgbouncer&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;pid&lt;/span&gt;

; &lt;span class=&quot;n&quot;&gt;IP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;address&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; * &lt;span class=&quot;n&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;means&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IPs&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;listen_addr&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;127&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;0&lt;/span&gt;.&lt;span class=&quot;m&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;listen_port&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;6432&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;unix_socket_dir&lt;/span&gt; = /&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;

; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt;, &lt;span class=&quot;n&quot;&gt;trust&lt;/span&gt;, &lt;span class=&quot;n&quot;&gt;plain&lt;/span&gt;, &lt;span class=&quot;n&quot;&gt;crypt&lt;/span&gt;, &lt;span class=&quot;n&quot;&gt;md5&lt;/span&gt;, &lt;span class=&quot;n&quot;&gt;cert&lt;/span&gt;, &lt;span class=&quot;n&quot;&gt;hba&lt;/span&gt;, &lt;span class=&quot;n&quot;&gt;pam&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;auth_type&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;trust&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;auth_file&lt;/span&gt; = /&lt;span class=&quot;n&quot;&gt;Users&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;userlist&lt;/span&gt;.&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;admin_users&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;stats_users&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pool_mode&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;server_reset_query&lt;/span&gt; = &lt;span class=&quot;n&quot;&gt;DISCARD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ALL&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;max_client_conn&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;100&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;default_pool_size&lt;/span&gt; = &lt;span class=&quot;m&quot;&gt;20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As you can see, we’re gonna pass connections to any db back to the postmaster via a local socket. I put the logs in my &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME&lt;/code&gt; for ease of use. I put the &lt;code class=&quot;highlighter-rouge&quot;&gt;auth_file&lt;/code&gt; in my &lt;code class=&quot;highlighter-rouge&quot;&gt;$HOME&lt;/code&gt; as well. Then I set myself up as both an admin and stats
user. I changed the mode into &lt;strong&gt;transaction&lt;/strong&gt; which is &lt;em&gt;usually&lt;/em&gt; the mode you want. Now, I add myself to the auth_file:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&quot;doug&quot; &quot;md5540094bd8172cd963fdfa773fe44b488&quot;'&lt;/span&gt; &amp;gt; userlist.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;(NOTE: I did a select on pg_shadow as a SUPERUSER to get these values.)&lt;/p&gt;

&lt;p&gt;And start pgBouncer:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; pgbouncer /usr/local/etc/pgbouncer.ini
2018-08-07 13:43:46.453 92057 LOG File descriptor limit: 7168 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;H:-1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, max_client_conn: 90, max fds possible: 100
2018-08-07 13:43:46.455 92057 LOG listening on 127.0.0.1:6432
2018-08-07 13:43:46.455 92057 LOG listening on unix:/tmp/.s.PGSQL.6432
2018-08-07 13:43:46.455 92057 LOG process up: pgbouncer 1.8.1, libevent 2.1.8-stable &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;kqueue&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, adns: evdns2, tls: OpenSSL 1.0.2o  27 Mar 2018
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now, we see if we can connect to pgBouncer’s internal db:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; psql -h 127.0.0.1 -p 6432 -d pgbouncer -X
psql &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.4, server 1.8.1/bouncer&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Type &lt;span class=&quot;s2&quot;&gt;&quot;help&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;help.

&lt;span class=&quot;gp&quot;&gt;pgbouncer=# &lt;/span&gt;show pools;
 database  |   user    | cl_active | cl_waiting | sv_active | sv_idle | sv_used | sv_tested | sv_login | maxwait | maxwait_us | pool_mode
-----------+-----------+-----------+------------+-----------+---------+---------+-----------+----------+---------+------------+-----------
 pgbouncer | pgbouncer |         1 |          0 |         0 |       0 |       0 |         0 |        0 |       0 |          0 | statement
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 row&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Success!&lt;/p&gt;

&lt;p&gt;Now, can we connect to one of our PostgreSQL dbs through pgBouncer:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; psql -h 127.0.0.1 -p 6432 -d doug
psql &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Type &lt;span class=&quot;s2&quot;&gt;&quot;help&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;help.

&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;doug@127.0.0.1:6432/doug[92825]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Huzzah!&lt;/p&gt;

&lt;p&gt;We will now alter &lt;code class=&quot;highlighter-rouge&quot;&gt;pgbouncer.ini&lt;/code&gt; and set &lt;code class=&quot;highlighter-rouge&quot;&gt;auth_type = md5&lt;/code&gt; and edit &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt; to use md5 as well to make sure we’re not passing around plaintext passwords. Our retest looks like:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; grep ^local &lt;span class=&quot;nv&quot;&gt;$PGDATA&lt;/span&gt;/pg_hba.conf
&lt;span class=&quot;nb&quot;&gt;local   &lt;/span&gt;all             all md5

doug@ReturnOfTheMac ~&amp;gt; pg_ctl -D &lt;span class=&quot;nv&quot;&gt;$PGDATA&lt;/span&gt; reload
server signaled
doug@ReturnOfTheMac ~&amp;gt; psql -h 127.0.0.1 -p 6432 -d doug
Password:
psql &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.4&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Type &lt;span class=&quot;s2&quot;&gt;&quot;help&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;help.

&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;doug@127.0.0.1:6432/doug[97966]&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# \q&lt;/span&gt;
doug@ReturnOfTheMac ~&amp;gt; psql -h 127.0.0.1 -p 6432 -d pgbouncer -X
Password:
psql &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.4, server 1.8.1/bouncer&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Type &lt;span class=&quot;s2&quot;&gt;&quot;help&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;help.

&lt;span class=&quot;gp&quot;&gt;pgbouncer=# &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\q&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Which, as you can see, we were now password prompted both times!&lt;/p&gt;

&lt;p&gt;Now, that we know it all works, we can go about changing things to not expose users through
the &lt;code class=&quot;highlighter-rouge&quot;&gt;auth_file&lt;/code&gt;. First, we’ll create a &lt;code class=&quot;highlighter-rouge&quot;&gt;pgbouncer&lt;/code&gt; user on our db, then we will
create a SECURITY DEFINER function will allow the &lt;code class=&quot;highlighter-rouge&quot;&gt;pgbouncer&lt;/code&gt; user to
(essentially) ‘sudo’ as a superuser to look at the &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_shadow&lt;/code&gt; table, and finally
we will ensure only our &lt;code class=&quot;highlighter-rouge&quot;&gt;pgbouncer&lt;/code&gt; user can execute that function:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6432&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;92825&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pgbouncer&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ENCRYPTED&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PASSWORD&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'secret'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLE&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;102&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6432&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;92825&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CONNECT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DATABASE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pgbouncer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;531&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;local&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5432&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;92825&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pgbouncer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOGIN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ALTER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLE&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;457&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6432&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;92825&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REPLACE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_lookup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i_username&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uname&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phash&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;more&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RETURNS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;record&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$$&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;more&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;more&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;passwd&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_catalog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pg_shadow&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;more&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i_username&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;phash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;more&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;more&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;more&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$$&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;LANGUAGE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;plpgsql&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SECURITY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFINER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;219&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6432&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;92825&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REVOKE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_lookup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pgbouncer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;REVOKE&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;330&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6432&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;92825&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXECUTE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;public&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;user_lookup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pgbouncer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;GRANT&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;572&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;(NOTE: Astute readers will note I’m connected as ‘doug’ to the db. This works cause in my setup that is a SUPERUSER. You should probably use the ‘postgres’ account.)&lt;/p&gt;

&lt;p&gt;And, let’s tell PgBouncer to use this function:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; grep ^auth /usr/local/etc/pgbouncer.ini
auth_type &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; md5
auth_file &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; /Users/doug/userlist.txt
auth_user &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; pgbouncer
auth_query &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; SELECT &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; FROM public.user_lookup&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And let’s edit our &lt;code class=&quot;highlighter-rouge&quot;&gt;auth_file&lt;/code&gt; to only contain the &lt;code class=&quot;highlighter-rouge&quot;&gt;pgbouncer&lt;/code&gt; user’s info:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; cat userlist.txt
&lt;span class=&quot;s2&quot;&gt;&quot;pgbouncer&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;md509d12ff67352814e4c467c7f55a3a1d7&quot;&lt;/span&gt;
doug@ReturnOfTheMac ~&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Restart pgBouncer, and let’s recheck:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReturnOfTheMac&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;~&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;psql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6432&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;                      &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;psql&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;Type&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;help&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;127&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6432&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doug&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7076&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;┌───────────────────────────────┐&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│&lt;/span&gt;              &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;              &lt;span class=&quot;err&quot;&gt;│&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;├───────────────────────────────┤&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;│&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2018&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;07&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;938919&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;│&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;└───────────────────────────────┘&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;438&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ms&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It works! But what about the pgBouncer internal db?&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; psql -h 127.0.0.1 -p 6432 -d pgbouncer
psql: ERROR:  No such user: doug
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Well, that makes sense. The &lt;code class=&quot;highlighter-rouge&quot;&gt;auth_file&lt;/code&gt; only has a &lt;code class=&quot;highlighter-rouge&quot;&gt;pgbouncer&lt;/code&gt; user. So, let’s edit the &lt;code class=&quot;highlighter-rouge&quot;&gt;pgbouncer.ini&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; grep &lt;span class=&quot;s1&quot;&gt;'_users'&lt;/span&gt; /usr/local/etc/pgbouncer.ini
admin_users &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; pgbouncer
stats_users &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; pgbouncer
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Retart pgBouncer once more and check:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; psql -h 127.0.0.1 -p 6432 -d pgbouncer -U pgbouncer -X
Password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;user pgbouncer:
psql &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.4, server 1.8.1/bouncer&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Type &lt;span class=&quot;s2&quot;&gt;&quot;help&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;help.

&lt;span class=&quot;gp&quot;&gt;pgbouncer=# &lt;/span&gt;show clients;
 &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; |   user    | database  | state  |   addr    | port  | local_addr | local_port |    connect_time     |    request_time     | &lt;span class=&quot;nb&quot;&gt;wait&lt;/span&gt; | wait_us |      ptr       | link | remote_pid | tls
------+-----------+-----------+--------+-----------+-------+------------+------------+---------------------+---------------------+------+---------+----------------+------+------------+-----
 C    | pgbouncer | pgbouncer | active | 127.0.0.1 | 54191 | 127.0.0.1  |       6432 | 2018-08-07 14:48:03 | 2018-08-07 14:48:06 |    0 |       0 | 0x7fa082005010 |      |          0 |
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 row&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And we’re golden!&lt;/p&gt;

&lt;p&gt;You can connect to pgBouncer internally using the &lt;code class=&quot;highlighter-rouge&quot;&gt;pgbouncer&lt;/code&gt; user, and you can connect to our normal PostgreSQL db as any valid user and it uses our function to do the auth!&lt;/p&gt;

&lt;p&gt;To complete this setup, we’re gonna move PostgreSQL to port &lt;code class=&quot;highlighter-rouge&quot;&gt;5433&lt;/code&gt; and pgBouncer to port &lt;code class=&quot;highlighter-rouge&quot;&gt;5432&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sh highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;doug@ReturnOfTheMac ~&amp;gt; egrep &lt;span class=&quot;s1&quot;&gt;'5432|5433'&lt;/span&gt; /usr/local/etc/pgbouncer.ini
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5433
listen_port &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 5432
doug@ReturnOfTheMac ~&amp;gt; grep port &lt;span class=&quot;nv&quot;&gt;$PGDATA&lt;/span&gt;/postgresql.conf
port &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 5433				&lt;span class=&quot;c&quot;&gt;# (change requires restart)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;So now, if someone tries to connect to our PostgreSQL on the default TCP/IP port, it goes through PgBouncer transparently (and then pgBouncer connects locally via a socket). Our users/apps are none the wiser, and us DBAs can always &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh&lt;/code&gt; into the box and connect directly to PostgreSQL via socket if needed. And we’re not exposing any user/app passwords in a text file on the OS.&lt;/p&gt;

&lt;p&gt;WIN WIN&lt;/p&gt;

&lt;p&gt;One final note: this is only working for the ‘doug’ database currently. If I wanted this to also work for another database, say ‘postgres’ or ‘prod_app’ then I would need to GRANT CONNECT on those dbs to ‘pgbouncer’ &lt;strong&gt;and&lt;/strong&gt; would need to create my function in them as well.&lt;/p&gt;

&lt;p&gt;☮️&lt;/p&gt;</content><category term="postgresql" /><summary type="html">I’ve noticed several individuals inquiring lately about pgBouncer and how they can avoid putting all users and their passwords in it’s auth_file. After the most recent such inquiry (hi Richard!) I decided I’d write this post to
hopefully make it clearer how to use ‘pass-thru auth’ and avoid maintaining your users and their passwords in an external file. So let’s see what this takes, shall we?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/%7B%22feature%22=%3E%22db.jpg%22%7D" /></entry><entry><title type="html">Locking it down</title><link href="/posts/Locking-it-down/" rel="alternate" type="text/html" title="Locking it down" /><published>2018-06-18T08:45:02-04:00</published><updated>2018-06-18T08:45:02-04:00</updated><id>/posts/Locking-it-down</id><content type="html" xml:base="/posts/Locking-it-down/">&lt;p&gt;I finally saved up and bought myself a smart lock at the end of April. I ended up getting the &lt;a href=&quot;https://smile.amazon.com/gp/product/B0752V8D8D&quot;&gt;August Smart Lock Pro&lt;/a&gt; with the Connect module. Now that I’ve used it for a month and a half, I feel like I can finally review it.&lt;/p&gt;

&lt;p&gt;TL;DR I love this lock.&lt;/p&gt;

&lt;p&gt;Honestly, the hardest part of this whole process was picking the lock to buy. I looked at the August lock, I looked at the Kwikset Bluetooth lock, I even looked at the Nest lock and debating waiting for its release. In the end, I chose the August for two reasons: it integrates with Google Home natively (no ‘talk to August’ bullshit) and it uses the existing lock’s keys so my landlord can’t complain.&lt;/p&gt;

&lt;p&gt;Installing the lock was stupid simple. You are directed to download their app for your phone, create an account, and then it gives you full-screen step-by-step directions. There’s nothing unusual about this deadlock, so if you’ve ever changed one before, you know how to do this. You’ll need a screwdriver and maybe 10 minutes.&lt;/p&gt;

&lt;p&gt;Installation is basically 4 steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Remove the old back on the deadbolt&lt;/li&gt;
  &lt;li&gt;Find the correct shaft adaptor&lt;/li&gt;
  &lt;li&gt;Install the new August back&lt;/li&gt;
  &lt;li&gt;Connect to the wifi&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;I don’t leave the house very often, if I’m honest, but the occasions I have since installing this have been very nice. I leave, the door locks (and thanks to other integrations my Blink cameras turn on); I return, the door unlocks (and the cameras turn off). I don’t have to carry a key with me. I don’t have to empty a hand to fish out my key to unlock the door. When I go to bed at night, I just tell Google to lock the door. The only minor annoyance is that Google won’t voice unlock the door (for security reasons).&lt;/p&gt;

&lt;p&gt;I’ve yet to use the app to give anyone a ‘temporary key’ but I have used the app to check on (and change) the lock status. I’ve also used the app to update the firmware on the lock.&lt;/p&gt;

&lt;p&gt;If you’re considering a smart lock, I highly recommend you look at the August Pro.&lt;/p&gt;

&lt;p&gt;★★★★★&lt;/p&gt;</content><category term="geek" /><category term="smarthome" /><category term="review" /><summary type="html">I finally saved up and bought myself a smart lock at the end of April. I ended up getting the August Smart Lock Pro with the Connect module. Now that I’ve used it for a month and a half, I feel like I can finally review it.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/%7B%22feature%22=%3E%22review.jpg%22%7D" /></entry><entry><title type="html">Mom cuts the cord</title><link href="/posts/Mom-cuts-the-cord/" rel="alternate" type="text/html" title="Mom cuts the cord" /><published>2018-05-31T07:12:06-04:00</published><updated>2018-05-31T07:12:06-04:00</updated><id>/posts/Mom-cuts-the-cord</id><content type="html" xml:base="/posts/Mom-cuts-the-cord/">&lt;p&gt;OK folks, it finally happened. My mother has cut the cord and now gets all her TV needs satisfied via OTA and OTT. Yes, you heard right. My mother. The same woman who spent the better part of a decade (I cut the cord in late 2008) saying how she didn’t understand how I could not have cable. Someone check the temperature in Hell will ya? :)&lt;/p&gt;

&lt;p&gt;All kidding aside, Mom (and Dad before he passed) has spent the past several years canceling Dish and DirecTV and switching back-n-forth between them to get the best ‘new customer’ rates and deals. But as Mom starts eyeing retirement and DirecTV keeps upping her bill $2 at a time for various fees, she’d had enough.&lt;/p&gt;

&lt;p&gt;So, over the course of the last few months, I walked Mom through getting a TCL Roku TV:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/tcl.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(Note, that’s actually a picture of the 55” which I bought last Aug. Mom bought the 32” even though I argued for the 37”)&lt;/p&gt;

&lt;p&gt;Then I walked her through using the 1byone 50-mile HDTV antenna I had previously bought her. And finally, I signed up for the DirecTVNow beta on Roku and waited for the DVR functionality to launch.&lt;/p&gt;

&lt;p&gt;With all the pieces in place, we spent the afternoon setting everything up during my recent visit. We had a few little bumps that weekend, and I’m going to be getting her a Tablo DUO in the near future so we can use the 1byone on both TVs, but otherwise she adjusted to it all pretty easily. I even hooked up a Roku stick to the TV in the spare bedroom and showed her its all exactly the same as in the living room (minus the OTA locals, of course). Listening to her argue w/ the DirecTV phone rep during the cancellation call was &lt;em&gt;extremely satisfying&lt;/em&gt; and made me proud. Mom still can’t seem to believe that for $35/mo she is getting everything she used to pay almost $100/mo for. But she’s already been telling her friends about it all :)&lt;/p&gt;

&lt;p&gt;So .. if you still haven’t cut the cord, what are you waiting for?&lt;/p&gt;</content><category term="general" /><category term="ott" /><summary type="html">OK folks, it finally happened. My mother has cut the cord and now gets all her TV needs satisfied via OTA and OTT. Yes, you heard right. My mother. The same woman who spent the better part of a decade (I cut the cord in late 2008) saying how she didn’t understand how I could not have cable. Someone check the temperature in Hell will ya? :)</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/%7B%22feature%22=%3E%22cordcutting.jpg%22%7D" /></entry><entry><title type="html">Upgrading PostgreSQL from 9.4 to 10.3 with pglogical</title><link href="/posts/Upgrading-PostgreSQL-from-9.4-to-10.3-with-pglogical/" rel="alternate" type="text/html" title="Upgrading PostgreSQL from 9.4 to 10.3 with pglogical" /><published>2018-04-05T09:15:46-04:00</published><updated>2018-04-05T09:15:46-04:00</updated><id>/posts/Upgrading-PostgreSQL-from-9.4-to-10.3-with-pglogical</id><content type="html" xml:base="/posts/Upgrading-PostgreSQL-from-9.4-to-10.3-with-pglogical/">&lt;p&gt;I recently helped a customer upgrade their PostgreSQL instance from 9.4.x on RHEL to 10.x on Ubuntu. While it initially sounded daunting, the use of &lt;code class=&quot;highlighter-rouge&quot;&gt;pglogical&lt;/code&gt; and some planning actually made it rather straightforward. While there’s nothing new or original in this post, I still felt compelled to write it up both for posterity’s sake and for anyone else that might find the info useful as an example in their own endeavors.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pglogical&lt;/code&gt; is a logical replication system implemented entirely as a PostgreSQL extension. Fully integrated, it requires no triggers or external programs. This makes it faster than Slony, Londiste, et al. It is also (roughly) the basis upon which logical replication in Pg 10 core is built.&lt;/p&gt;

&lt;h3 id=&quot;installing-pglogical&quot;&gt;Installing pglogical&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;pglogical&lt;/code&gt; is available from 2ndQuadrant in both a YUM repository for RedHat-based distros and in an APT repository for Debian-based distros. It will need to be installed on both the source (old Pg version) and destination servers (new Pg version).&lt;/p&gt;

&lt;p&gt;The instructions for installing their repo and the needed packages can be found &lt;a href=&quot;https://www.2ndquadrant.com/en/resources/pglogical/pglogical-installation-instructions/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;configuring-pglogical&quot;&gt;Configuring pglogical&lt;/h3&gt;

&lt;h4 id=&quot;tweaking-the-cluster-config&quot;&gt;Tweaking the cluster config&lt;/h4&gt;

&lt;p&gt;You will need to adjust the &lt;code class=&quot;highlighter-rouge&quot;&gt;postgresql.conf&lt;/code&gt; file to accommodate &lt;code class=&quot;highlighter-rouge&quot;&gt;pglogical&lt;/code&gt;. On both the source &lt;em&gt;and&lt;/em&gt; destination servers, do the following:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;include 'pglogical.conf'&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$PGDATA&lt;/span&gt;/postgresql.conf
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;wal_level = 'logical'&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$PGDATA&lt;/span&gt;/pglogical.conf
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;max_worker_processes = 10&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$PGDATA&lt;/span&gt;/pglogical.conf
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;max_replication_slots = 10&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$PGDATA&lt;/span&gt;/pglogical.conf
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;max_wal_senders = 10&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$PGDATA&lt;/span&gt;/pglogical.conf
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;shared_preload_libraries = 'pglogical'&quot;&lt;/span&gt; &amp;gt;&amp;gt; &lt;span class=&quot;nv&quot;&gt;$PGDATA&lt;/span&gt;/pglogical.conf
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;NOTE: If you already have one or more values in &lt;code class=&quot;highlighter-rouge&quot;&gt;shared_preload_libraries&lt;/code&gt;, simply append &lt;code class=&quot;highlighter-rouge&quot;&gt;pglogical&lt;/code&gt; to the list of values already there.&lt;/p&gt;

&lt;h4 id=&quot;ensure-the-presence-of-pks&quot;&gt;Ensure the presence of PKs&lt;/h4&gt;

&lt;p&gt;Logical replication doesn’t work without primary keys. Identify all tables that do not have one:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nspname&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;schema&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relname&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pg_class&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;pg_namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relnamespace&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relkind&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'r'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pg_constraint&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;con&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;con&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;conrelid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;oid&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;con&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;contype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'p'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nspname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ALL&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;ARRAY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'pg_catalog'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'sys'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'dbo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s1&quot;&gt;'information_schema'&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;create-the-pglogical-extension&quot;&gt;Create the pglogical extension&lt;/h4&gt;

&lt;p&gt;On both the source &lt;em&gt;and&lt;/em&gt; destination Pg instances, create the &lt;code class=&quot;highlighter-rouge&quot;&gt;pglogical&lt;/code&gt; extension &lt;em&gt;in every database you wish to replicate&lt;/em&gt;:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EXTENSION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;NOTE: On Pg 9.4 &lt;strong&gt;only&lt;/strong&gt; you will need to &lt;code class=&quot;highlighter-rouge&quot;&gt;CREATE EXTENSION pglogical_origin;&lt;/code&gt; FIRST.&lt;/p&gt;

&lt;h3 id=&quot;running-pglogical&quot;&gt;Running pglogical&lt;/h3&gt;

&lt;h4 id=&quot;ensure-global-objects-are-copied&quot;&gt;Ensure global objects are copied&lt;/h4&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;pglogical&lt;/code&gt; tool runs at the database level which means that global objects like roles are &lt;strong&gt;not&lt;/strong&gt; copied. Therefore, you need to ensure these objects are created yourself.&lt;/p&gt;

&lt;p&gt;On the source Pg server:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pg_dumpall -g -f globals.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Then copy &lt;code class=&quot;highlighter-rouge&quot;&gt;globals.sql&lt;/code&gt; to the destination server and run:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;psql -f globals.sql
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;prep-the-destination-schema&quot;&gt;Prep the destination schema&lt;/h4&gt;

&lt;p&gt;At this time, &lt;code class=&quot;highlighter-rouge&quot;&gt;pglogical&lt;/code&gt; doesn’t replicate DDL, so it is necessary to ensure that both the source and destination have matching schema object definitions before attempting to replicate.&lt;/p&gt;

&lt;p&gt;As such, for each source database that you want to replicate, you need to run a ‘schema only’ dump:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pg_dump -Fc -s -f dbname_schema.dmp dbname
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now copy the &lt;code class=&quot;highlighter-rouge&quot;&gt;dbname_schema.dmp&lt;/code&gt; file(s) to the destination server, and run for each database:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pg_restore -d dbname dbname_schema.dmp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h4 id=&quot;create-a-replication-user&quot;&gt;Create a replication user&lt;/h4&gt;

&lt;p&gt;We’ll need a user that has the &lt;code class=&quot;highlighter-rouge&quot;&gt;replication&lt;/code&gt; permission for this all to work, so let’s create one:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOGIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REPLICATION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SUPERUSER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ENCRYPTED&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PASSWORD&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'secret'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Do this on &lt;strong&gt;both&lt;/strong&gt; the source and destination Pg instances.&lt;/p&gt;

&lt;p&gt;Tweak the &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt; on &lt;strong&gt;both&lt;/strong&gt; the source and destination Pg instances to allow the replication user to connect:&lt;/p&gt;

&lt;div class=&quot;language-apache highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;local  replication  pglogical  trust
host   replication  pglogical  0.0.0.0/0  md5
local  dbname       pglogical  trust
host   dbname       pglogical  0.0.0.0/0  md5
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;NOTE: Make sure to edit &lt;code class=&quot;highlighter-rouge&quot;&gt;0.0.0.0/0&lt;/code&gt; to match your actual CIDR or IP address and &lt;code class=&quot;highlighter-rouge&quot;&gt;dbname&lt;/code&gt; to match the db you wish to replicate.&lt;/p&gt;

&lt;h4 id=&quot;create-your-publication&quot;&gt;Create your publication&lt;/h4&gt;

&lt;p&gt;Now, we’re ready to actually setup and start the replication. First, we need to SIGHUP the postmaster so it sees all the config changes we made on &lt;strong&gt;both&lt;/strong&gt; the source and target Pg instances:&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pg_ctl -D &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;ps -efw|grep -- &lt;span class=&quot;s2&quot;&gt;&quot;[p]ost.*-D&quot;&lt;/span&gt;|cut -d&lt;span class=&quot;se&quot;&gt;\-&lt;/span&gt; -f2|cut -d&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt; -f2&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; reload
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On the &lt;strong&gt;source&lt;/strong&gt; Pg instance, we need to create a publication to ‘push’ the data to the new instance:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'dbname_provider'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dsn&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'host=127.0.0.1 port=5432 dbname=test user=pglogical'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Adjust the &lt;code class=&quot;highlighter-rouge&quot;&gt;port=&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;dbname=&lt;/code&gt; parameters to match your &lt;strong&gt;source&lt;/strong&gt; Pg instance. If replicating more than one database, repeat this command for each database, changing &lt;code class=&quot;highlighter-rouge&quot;&gt;dbname&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;dbname_provider&lt;/code&gt; accordingly.&lt;/p&gt;

&lt;h4 id=&quot;add-your-tables-to-the-publication&quot;&gt;Add your tables to the publication&lt;/h4&gt;

&lt;p&gt;Now that we have a publication channel, we need content to publish. Let’s add that now:&lt;/p&gt;

&lt;p&gt;1: Add all your tables:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replication_set_add_all_tables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{public}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2: Add all your sequences:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;replication_set_add_all_sequences&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;schema_names&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{public}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;synchronize_data&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Obviously, you should change &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; in both the above if you are using a different schema for your objects. If you are using multiple schemas, simply repeat the above and change &lt;code class=&quot;highlighter-rouge&quot;&gt;public&lt;/code&gt; appropriately.&lt;/p&gt;

&lt;p&gt;NOTE: The &lt;code class=&quot;highlighter-rouge&quot;&gt;nextval&lt;/code&gt; of sequences will be synced every 60-70s roughly.&lt;/p&gt;

&lt;h4 id=&quot;create-your-subscription&quot;&gt;Create your subscription&lt;/h4&gt;

&lt;p&gt;Now that we have a publication channel and its content defined, we need to setup a subscriber on the &lt;strong&gt;target&lt;/strong&gt; Pg instance to consume the channel:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;node_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'subscriber'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dsn&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'host=127.0.0.1 port=5432 dbname=test user=pglogical'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Adjust the &lt;code class=&quot;highlighter-rouge&quot;&gt;dbname=&lt;/code&gt; parameter to match your &lt;strong&gt;target&lt;/strong&gt; Pg instance. If replicating more than one database, repeat this command for each database.&lt;/p&gt;

&lt;p&gt;Now, tell the subscriber what to subscribe to:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_subscription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;subscription_name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'subscription'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provider_dsn&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'host=172.28.173.18 port=5432 dbname=test user=pglogical'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;replication_sets&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'{default}'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Adjust &lt;code class=&quot;highlighter-rouge&quot;&gt;host=&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;port=&lt;/code&gt;, and &lt;code class=&quot;highlighter-rouge&quot;&gt;dbname=&lt;/code&gt; parameters to match your &lt;strong&gt;source&lt;/strong&gt; Pg instance. If replicating more than one database, repeat this command for each database, changing &lt;code class=&quot;highlighter-rouge&quot;&gt;dbname&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;subscription_name&lt;/code&gt; accordingly.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;At this point, data should be replicating and (if not already) it will catch up to ‘current’ quickly. Once caught up, replication will maintain sync between the source and target instances in almost real time. You can easily determine the current state of &lt;code class=&quot;highlighter-rouge&quot;&gt;pglogical&lt;/code&gt; by issuing this SQL on the subscriber:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subscription_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;show_subscription_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If the query returns &lt;code class=&quot;highlighter-rouge&quot;&gt;initializing&lt;/code&gt; then it is copying the original source data to the destination. If the query returns &lt;code class=&quot;highlighter-rouge&quot;&gt;replicating&lt;/code&gt; then the initial synchronization has completed and replicating is now happening in real time as data changes.&lt;/p&gt;

&lt;p&gt;When ready, you can simply stop any applications pointing at the &lt;em&gt;source&lt;/em&gt; Pg instance, wait a few minutes to ensure replication drains any outstanding items, force an update of your sequences:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;synchronize_sequence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seqoid&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sequence_state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;and then re-point your applications at the &lt;em&gt;target&lt;/em&gt; instance.&lt;/p&gt;

&lt;p&gt;Post-upgrade, if you wish to clean everything up, simply:&lt;/p&gt;

&lt;p&gt;1: Remove the subscription:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop_subscription&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'subscription'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;2: Remove the subscriber:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drop_node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'subscriber'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;3: Remove the extension:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EXTENSION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CASCADE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;4: Remove the user:&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DROP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ROLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pglogical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;5: Remove any &lt;code class=&quot;highlighter-rouge&quot;&gt;pglogical&lt;/code&gt; lines in &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;6: Remove &lt;code class=&quot;highlighter-rouge&quot;&gt;$PGDATA/pglogical.conf&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;7: Reload PostgreSQL&lt;/p&gt;

&lt;p&gt;8: Remove the OS packages using &lt;code class=&quot;highlighter-rouge&quot;&gt;yum&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;apt&lt;/code&gt;&lt;/p&gt;</content><category term="postgresql" /><summary type="html">I recently helped a customer upgrade their PostgreSQL instance from 9.4.x on RHEL to 10.x on Ubuntu. While it initially sounded daunting, the use of pglogical and some planning actually made it rather straightforward. While there’s nothing new or original in this post, I still felt compelled to write it up both for posterity’s sake and for anyone else that might find the info useful as an example in their own endeavors.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/%7B%22feature%22=%3E%22db.jpg%22%7D" /></entry><entry><title type="html">Car(e) free in Columbus</title><link href="/posts/Car-free-in-Columbus/" rel="alternate" type="text/html" title="Car(e) free in Columbus" /><published>2018-03-05T10:55:32-05:00</published><updated>2018-03-05T10:55:32-05:00</updated><id>/posts/Car-free-in-Columbus</id><content type="html" xml:base="/posts/Car-free-in-Columbus/">&lt;p&gt;Last year, at the beginning of March, I turned in my &lt;a href=&quot;http://www.autoguide.com/blog/wp-content/uploads/2013/09/2014-kia-optima.jpg&quot;&gt;2014 Kia Optima LX&lt;/a&gt; at the end of its lease and decided to go ‘car free’. I wanted to see exactly how much of a PITA it would be, how many services I’d need to subscribe to to get things done, and how much money it would actually save me. It’s now been a year, and I can definitively answer these questions.&lt;/p&gt;

&lt;p&gt;So, Let’s break things down shall we?&lt;/p&gt;

&lt;p&gt;I was paying $440.88/mo for the car, or $5290.56/yr. A not-insignificant chunk of change. That’s &lt;strong&gt;not&lt;/strong&gt; including insurance, gas, oil changes, etc. This was purely for the lease itself.&lt;/p&gt;

&lt;p&gt;Once I was ‘sans auto’, I started taking Uber whenever I needed to go somewhere (my monthly PUG meeting, shopping, out to eat, etc). Looking at my past year’s bank statements, I’ve given $1674.83 to Uber. A decent chunk of change, to be sure, but less than I expected if I’m honest.&lt;/p&gt;

&lt;p&gt;Since I could no longer drive to the store, I signed up for &lt;a href=&quot;https://www.shipt.com&quot;&gt;Shipt&lt;/a&gt; to have my groceries delivered. Since I wasn’t sure if I would like the service (or if I’d give up and get another car) I paid the monthly rate of $14/mo instead of the $99 yearly rate. So I spent $168 on Shipt in the past year. Please keep in mind, there is a slight per-item markup with Shipt, but I didn’t track it and just budgeted ‘groceries’ as a total bill.&lt;/p&gt;

&lt;p&gt;And finally, if I wanted to go visit friends or family outside Columbus, I needed to rent a car. I have a decent reward membership with &lt;a href=&quot;htttps://www.enterprise.com&quot;&gt;Enterprise&lt;/a&gt; and there is one close to home, so that’s where I rent. In the past year, I’ve given them $1041.14 of my hard earned income. I’ve also had to put a tank of gas or two into those rentals, but I didn’ think to track them.&lt;/p&gt;

&lt;p&gt;And, honestly, that’s it. I &lt;em&gt;really&lt;/em&gt; figured I’d have to sign up for a ton of things to “replace” my car,  but that’s really all there is. It helps (tremendously) that I’m able to telecommute for my dayjob. Of course, that’s &lt;em&gt;also&lt;/em&gt; why I was thinking that having a car is a waste. I paid (a lot* of money, monthly, for a car to sit in my driveway.&lt;/p&gt;

&lt;p&gt;For those still with me, the math looks like this:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; 5290.56 -- yearly car payments
- 168.00 -- yearly Shipt
-1674.83 -- Uber for the year
-1041.14 -- car rentals for the year
~~~~~~~~
$2,406.59 money in my pocket
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And &lt;em&gt;bam&lt;/em&gt;, just like that I’m ~$2500/yr richer. And that’s &lt;strong&gt;without&lt;/strong&gt; considering fuel, oil, tires, maintenance, &lt;em&gt;or insurance&lt;/em&gt;. Over a standard 5 yr car loan, that’s ~$12500 I save! So yeah, a good decision for me, I think.&lt;/p&gt;</content><category term="general" /><summary type="html">Last year, at the beginning of March, I turned in my 2014 Kia Optima LX at the end of its lease and decided to go ‘car free’. I wanted to see exactly how much of a PITA it would be, how many services I’d need to subscribe to to get things done, and how much money it would actually save me. It’s now been a year, and I can definitively answer these questions.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/%7B%22feature%22=%3E%22general.png%22%7D" /></entry><entry><title type="html">updated PostgreSQL homebrew script</title><link href="/posts/updated-PostgreSQL-homebrew-script/" rel="alternate" type="text/html" title="updated PostgreSQL homebrew script" /><published>2017-10-16T09:09:23-04:00</published><updated>2017-10-16T09:09:23-04:00</updated><id>/posts/updated-PostgreSQL-homebrew-script</id><content type="html" xml:base="/posts/updated-PostgreSQL-homebrew-script/">&lt;p&gt;With the release of PostgreSQL 10, I’ve updated my &lt;code class=&quot;highlighter-rouge&quot;&gt;pg&lt;/code&gt; script. You might recall from previous posts that this script is for Homebrew users that have tapped Peter’s brew recipes. It allows for installing and switching between multiple version of PostgreSQL seemlessly. While I was in there adding v10 support, I tweaked and tuned the code a bit and tidyied up the output significantly. I’m pretty pleased with the new version actually.&lt;/p&gt;

&lt;p&gt;As always, it’s been added as a gist:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/hunleyd/0ee7d8745c2f9854b34ed48ae9196362.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Enjoy.&lt;/p&gt;</content><category term="postgresql" /><category term="homebrew" /><summary type="html">With the release of PostgreSQL 10, I’ve updated my pg script. You might recall from previous posts that this script is for Homebrew users that have tapped Peter’s brew recipes. It allows for installing and switching between multiple version of PostgreSQL seemlessly. While I was in there adding v10 support, I tweaked and tuned the code a bit and tidyied up the output significantly. I’m pretty pleased with the new version actually.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/%7B%22feature%22=%3E%22db.jpg%22%7D" /></entry><entry><title type="html">When you cannot get there from here</title><link href="/posts/When-you-cannot-get-there-from-here/" rel="alternate" type="text/html" title="When you cannot get there from here" /><published>2017-07-25T07:42:47-04:00</published><updated>2017-07-25T07:42:47-04:00</updated><id>/posts/When-you-cannot-get-there-from-here</id><content type="html" xml:base="/posts/When-you-cannot-get-there-from-here/">&lt;p&gt;Connecting to a PostgreSQL instance isn’t hard generally, but sometimes you can run into issues. Sometimes a port isn’t open on a firewall, or the server is in a VLAN that you can’t get to, or perhaps the server isn’t running on the network interface you think it is. More commonly, you can reach the PostgreSQL instance but you’re connection isn’t authorized (which is not the same as being unable to &lt;em&gt;authenticate&lt;/em&gt;). Fortunately, the error messages returned in these different failure scenarios are fairly verbose and distinct so you can easily tell which scenario you’re facing. Let’s dive into each scenario and see what the error looks like, shall we?&lt;/p&gt;

&lt;h4 id=&quot;scenario-1---bad-password&quot;&gt;Scenario 1 - Bad password&lt;/h4&gt;

&lt;p&gt;Let’s first assume that everything is working and you &lt;em&gt;can&lt;/em&gt; actually connect to the PostgreSQL instance, but you can’t authenticate. The error will look like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/authentication.png&quot; alt=&quot;auth failed&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see, the message makes it pretty clear that you were able to connect, but your credentials were wrong (you were &lt;em&gt;authorized&lt;/em&gt; to connect, but failed to &lt;em&gt;authenticate&lt;/em&gt;). Did you type the password incorrectly? Is there a &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.pgpass&lt;/code&gt; &lt;a href=&quot;https://www.postgresql.org/docs/current/static/libpq-pgpass.html&quot;&gt;file&lt;/a&gt; that is providing the password for you? Do you have &lt;code class=&quot;highlighter-rouge&quot;&gt;$PGPASSWORD&lt;/code&gt; defined in your &lt;a href=&quot;https://www.postgresql.org/docs/current/static/libpq-envars.html&quot;&gt;environment&lt;/a&gt;? Fix the password being passed to PostgreSQL, and you won’t have further issues in this scenario.&lt;/p&gt;

&lt;h4 id=&quot;scenario-2---pg_hbaconf-rejects-you&quot;&gt;Scenario 2 - pg_hba.conf rejects you&lt;/h4&gt;

&lt;p&gt;For our second scenario, we’re going to assume that you &lt;em&gt;can&lt;/em&gt; actually connect to the PostgreSQL instance, but there is an entry in &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt; denying you access. First, we’ll try connecting via a local Unix socket:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/reject_socket.png&quot; alt=&quot;reject socket&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As you can see, it straight up tells you that you have been &lt;em&gt;explicitly denied access&lt;/em&gt;. It may be rejecting connections via Unix sockets completely, or it may be rejecting connection as the specified user via Unix socket, or it may be rejecting connections to the specified database via Unix sock. You could determine which of these scenarios is true by trying a different user on the same database and then trying the same user on a different database. In any case, the problem &lt;em&gt;is not&lt;/em&gt; networking or firewall related. The DBA needs to adjust &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt; to allow connections of this type, or you need to connect via a TCP port instead of a Unix socket. Discuss with your DBA.&lt;/p&gt;

&lt;p&gt;Now, let’s try via a TCP port:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/reject_port.png&quot; alt=&quot;reject port&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Again, you can see that it pretty plainly tells you that you have been &lt;em&gt;explicitly denied&lt;/em&gt;. In this case though, it may be rejecting your IP address specifically, your entire network segment, your id, that database, or the fact that you didn’t make an SSL connection. You can whittle this down by trying a different user on the same db, trying the same user on a different db, or switching to an SSL connection and repeating these tests. (I assume that you can’t change your IP address. But perhaps you could make the same test cases from another computer). Again, you’ll probably need the DBA to resolve this with you.&lt;/p&gt;

&lt;h4 id=&quot;scenario-3---pg_hbaconf-doesnt-allow-you&quot;&gt;Scenario 3 - pg_hba.conf doesn’t allow you&lt;/h4&gt;

&lt;p&gt;I know what you’re thinking. “Isn’t this the same as above?”. And the answer is “no it is not”. Above, the &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt; file had an entry that matched your incoming connection and said to &lt;strong&gt;explicitly&lt;/strong&gt; reject it. In this scenario, there is &lt;em&gt;no entry that matches your connection&lt;/em&gt; and you end up &lt;strong&gt;implicitly&lt;/strong&gt; denied.&lt;/p&gt;

&lt;p&gt;Again, we’ll start by using a Unix socket:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/noentry_socket.png&quot; alt=&quot;no entry socket&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once more, the message pretty clearly tells you what is wrong. As it says, &lt;em&gt;there is no entry in &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt; that matches your incoming connection&lt;/em&gt;. And since PostgreSQL tries to err on the side of caution, when it can’t find an entry stating definitively what to do, it rejects you. The same troubleshooting steps as above apply (change the user/db, etc). And also like above, the DBA is going to need to edit &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt; to add an entry for your connection.&lt;/p&gt;

&lt;p&gt;Now, what does it look like over a TCP port:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/noentry_port.png&quot; alt=&quot;no entry port&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s the same error message as above but showing your IP address instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;[local]&lt;/code&gt;. And the same debugging applies. Once again, the DBA will need to add an entry to &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_hba.conf&lt;/code&gt; to resolve this.&lt;/p&gt;

&lt;h4 id=&quot;scenario-4---everything-else-no-really&quot;&gt;Scenario 4 - everything else (no, really)&lt;/h4&gt;

&lt;p&gt;By default, PostgreSQL listens for connections on port 5432. Sometimes, your DBA (or your vendor) has chosen to run PostgreSQL on a different port for some reason. If you are not trying to connect to the correct port, you’ll get an error from &lt;code class=&quot;highlighter-rouge&quot;&gt;psql&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you were trying to connect via a Unix socket, you’ll see:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/socket_nope.png&quot; alt=&quot;socket nope&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you were trying a TCP port connection, you’d see:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/port_nope.png&quot; alt=&quot;port nope&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This error indicates that it cannot establish a network connection with PostgreSQL at the IP address (or UNix socket) you specified on the default port. Check to make sure you don’t have &lt;code class=&quot;highlighter-rouge&quot;&gt;$PGPORT&lt;/code&gt; set incorrectly in your environment.&lt;/p&gt;

&lt;p&gt;If you &lt;em&gt;are&lt;/em&gt; using the correct port, and you still see one of two errors above, then the issue will be one of the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PostgreSQL isn’t running&lt;/li&gt;
  &lt;li&gt;PostgreSQL is running, but on a different IP address than you’re trying to connect to&lt;/li&gt;
  &lt;li&gt;PostgreSQL is running, but you cannot establish a network connection from here to there&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If PostgreSQL isn’t running, talk to your DBA about why (maybe it died, maybe it’s a maintenance window). If you are affected by the 2&lt;sup&gt;nd&lt;/sup&gt; bullet item, you’ll have to talk with your DBA about the proper IP address to use when connecting. Note that, by default, PostgreSQL only listens on &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost&lt;/code&gt; and none of your other interfaces. If this hasn’t been changed (&lt;code class=&quot;highlighter-rouge&quot;&gt;listen_addresses&lt;/code&gt; in &lt;code class=&quot;highlighter-rouge&quot;&gt;postgresql.conf&lt;/code&gt;) then you’ll fall into this failure category. And if you’re plagued by the 3&lt;sup&gt;rd&lt;/sup&gt; bullet item, you’ll have to talk to your network admin (and probably your DBA) as there may be a firewall blocking you, or your VLAN can’t connect to the other VLAN, or some other layer 3/4 tomfoolery.&lt;/p&gt;

&lt;p&gt;So now you know all the (common) ways that connecting to PostgreSQL can fail and how to distinguish between them. With just a little bit of knowledge, you can communicate exactly what is happening to your DBA and make it easier for him/her to rectify the issue. Go forth, and happy PostgreSQL-ing.&lt;/p&gt;</content><category term="postgresql" /><summary type="html">Connecting to a PostgreSQL instance isn’t hard generally, but sometimes you can run into issues. Sometimes a port isn’t open on a firewall, or the server is in a VLAN that you can’t get to, or perhaps the server isn’t running on the network interface you think it is. More commonly, you can reach the PostgreSQL instance but you’re connection isn’t authorized (which is not the same as being unable to authenticate). Fortunately, the error messages returned in these different failure scenarios are fairly verbose and distinct so you can easily tell which scenario you’re facing. Let’s dive into each scenario and see what the error looks like, shall we?</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/%7B%22feature%22=%3E%22db.jpg%22%7D" /></entry><entry><title type="html">Installing pgBackRest on OSX</title><link href="/posts/Installing-pgBackRest-on-OSX/" rel="alternate" type="text/html" title="Installing pgBackRest on OSX" /><published>2017-06-14T08:40:30-04:00</published><updated>2017-06-14T08:40:30-04:00</updated><id>/posts/Installing-pgBackRest-on-OSX</id><content type="html" xml:base="/posts/Installing-pgBackRest-on-OSX/">&lt;p&gt;If you’ve followed my previous posts (&lt;a href=&quot;https://hunleyd.github.io/posts/PostgreSQL-Homebrew-and-You/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://hunleyd.github.io/posts/Getting-fancy-with-PostgreSQL-and-Homebrew/&quot;&gt;here&lt;/a&gt;), then you already have one or more versions of PostgreSQL installed on your Mac. Maybe these are solely for test or dev purposes and you don’t really care about any of the data therein, but if you do, let me guide you to &lt;a href=&quot;http://www.pgbackrest.org/&quot;&gt;pgBackRest&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;pgBackRest aims to be a simple, reliable backup and restore system that can seamlessly scale up to the largest databases and workloads.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;Instead of relying on traditional backup tools like tar and rsync, pgBackRest implements all backup features internally and uses a custom protocol for communicating with remote systems. Removing reliance on tar and rsync allows for better solutions to database-specific backup challenges. The custom remote protocol allows for more flexibility and limits the types of connections that are required to perform a backup which increases security.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;pgBackRest is written in Perl, but don’t hold that against it. As of the 1.19 release, pgBackRest can now use S3 buckets as the storage backend. I &lt;em&gt;really&lt;/em&gt; like pgBackRest and tend to use it for myself and customers over any of the other tools in the PostgreSQL ecosphere. So, let’s get started by downloading the latest release from their site, and then installing it. For some reason, no one has added pgBackRest to Homebrew yet (someone, pls!) so let’s do it the manual way:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/hunleyd/4e7390cc161206d1e53019c8e44a20b7.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;(Keep in mind that I already had Perl setup to connect to PostgreSQL for other uses. You might need to install &lt;code class=&quot;highlighter-rouge&quot;&gt;DBD::Pg&lt;/code&gt;.)&lt;/p&gt;

&lt;p&gt;Now that pgBackRest is installed, let’s configure it. First, we’ll want to set some of the global properties that affect all pgBackRest operations:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/hunleyd/005748ef36074b225619f79ab3420c54.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;As you can see, we set the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;force the log level for all console output to ‘info’&lt;/li&gt;
  &lt;li&gt;define the S3 bucket we want to use&lt;/li&gt;
  &lt;li&gt;define the S3 endpoint to connect to&lt;/li&gt;
  &lt;li&gt;define our S3 key&lt;/li&gt;
  &lt;li&gt;define our S3 secret key&lt;/li&gt;
  &lt;li&gt;set which region our bucket is in&lt;/li&gt;
  &lt;li&gt;tell pgBackRest that we’re using S3 as the backend&lt;/li&gt;
  &lt;li&gt;configure retention of full backups&lt;/li&gt;
  &lt;li&gt;tell pgBackRest to issue a CHECKPOINT so backups can start right away instead of waiting for the next regular checkpoint&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now, we need to tell pgBackRest which instance of PostgreSQL we want to backup and where to find it. Again, if you used my previous posts to install multiple versions via Homebrew, this should look familiar:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/hunleyd/fea13b1e4b57f7c0ad068ef2579a04cd.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;You can see for each pg cluster, we define:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the path to the &lt;code class=&quot;highlighter-rouge&quot;&gt;$PGDATA&lt;/code&gt; directory&lt;/li&gt;
  &lt;li&gt;the port the cluster listens on&lt;/li&gt;
  &lt;li&gt;and the path we want to store the backups in on our backend&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;When you put this all together, we’ll be connecting to an S3 bucket called, creatively enough, &lt;code class=&quot;highlighter-rouge&quot;&gt;hunleyd-pgbackrest&lt;/code&gt; and then we will create a top-level directory (‘96’, ‘95’, etc) to store each cluster’s backups in.&lt;/p&gt;

&lt;p&gt;Now that we’ve got our configuration complete, let’s do an initial backup of one of the clusters. First, we have to create the appropriate directories and metadata on the backend:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/hunleyd/ac4aa555e10ffa9a210983d7997e3ebc.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Then, we have pgBackRest verify that everything is properly setup. Note that this includes checking to ensure you tweaked &lt;code class=&quot;highlighter-rouge&quot;&gt;postgresql.conf&lt;/code&gt; according to the directions on their site (I’m not going to repeat them here):&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/hunleyd/56358e6024a84833af73fda3d7d71432.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;And since that all worked, we can take our first actual backup:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/hunleyd/fdc5991f31aa098f685a3a462461d897.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Neat!&lt;/p&gt;

&lt;p&gt;Now, let’s check our S3 bucket, shall we?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/s3_1.png&quot; alt=&quot;s3_1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can see here the top-level contents of my &lt;code class=&quot;highlighter-rouge&quot;&gt;hunleyd-pgbackrest&lt;/code&gt; bucket. As stated before, each cluster gets its own sub-dir. Since we just backed up the ‘92’ cluster, let’s look inside it’s dir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/s3_2.png&quot; alt=&quot;s3_2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can see that pgBackRest has created as directory for the WALs to be stored in whenever &lt;code class=&quot;highlighter-rouge&quot;&gt;archive_command&lt;/code&gt; fires and another directory for the actual cluster backups. Peeking into the &lt;code class=&quot;highlighter-rouge&quot;&gt;archive&lt;/code&gt; dir, we see:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/s3_3.png&quot; alt=&quot;s3_3&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This shows us some metadata, and shows that pgBackRest creates a directory for each timeline of the cluster. Since we are on timeline 1 in our 92 cluster, we have a &lt;code class=&quot;highlighter-rouge&quot;&gt;9.2-1&lt;/code&gt; directory inside of which, we find:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/s3_4.png&quot; alt=&quot;s3_4&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Our archived WALs have been compressed and uploaded. Hurray!&lt;/p&gt;

&lt;p&gt;Now, let’s check inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;backup&lt;/code&gt; directory:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/s3_5.png&quot; alt=&quot;s3_5&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can see some metadata, and we can see a folder named the same as the backup label that was used when we ran our full backup. Inside that folder, we can see:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/s3_6.png&quot; alt=&quot;s3_6&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hey look, more metadata! And another folder! :) So, let’s dive into the &lt;code class=&quot;highlighter-rouge&quot;&gt;pg_data&lt;/code&gt; folder where we see:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/s3_7.png&quot; alt=&quot;s3_7&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Holy crap! It’s a basebackup of our &lt;code class=&quot;highlighter-rouge&quot;&gt;$PGDATA&lt;/code&gt; data directory. And all the files have been nicely compressed for us. Rock on, pgBackRest!&lt;/p&gt;

&lt;p&gt;And just in case you wanted to see the current backup catalog:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/hunleyd/f553b0931a571965ca9bcb6235cb8fcf.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;(look at that compression!)&lt;/p&gt;</content><category term="postgresql" /><category term="osx" /><summary type="html">If you’ve followed my previous posts (here and here), then you already have one or more versions of PostgreSQL installed on your Mac. Maybe these are solely for test or dev purposes and you don’t really care about any of the data therein, but if you do, let me guide you to pgBackRest.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/%7B%22feature%22=%3E%22db.jpg%22%7D" /></entry><entry><title type="html">Goodbye, Loui boy</title><link href="/posts/Goodbye-Loui-boy/" rel="alternate" type="text/html" title="Goodbye, Loui boy" /><published>2017-02-16T03:35:19-05:00</published><updated>2017-02-16T03:35:19-05:00</updated><id>/posts/Goodbye-Loui-boy</id><content type="html" xml:base="/posts/Goodbye-Loui-boy/">&lt;p&gt;&lt;img src=&quot;/images/loui.jpg&quot; class=&quot;rleader&quot; /&gt;Thank you, Loui, for bringing so much joy and happiness to our lives these past ten years. &lt;em&gt;I will miss you.&lt;/em&gt;&lt;/p&gt;</content><category term="general" /><summary type="html">Thank you, Loui, for bringing so much joy and happiness to our lives these past ten years. I will miss you.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="/%7B%22feature%22=%3E%22alone_boy.jpg%22%7D" /></entry></feed>
